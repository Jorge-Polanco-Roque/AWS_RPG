{"ast":null,"code":"import React,{useState,useEffect}from'react';import styled,{keyframes}from'styled-components';import{motion}from'framer-motion';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const BossManager=_ref=>{let{currentBoss,bossHP,maxBossHP,onBossDefeat,onBossAttack,questionCount}=_ref;const[currentPhase,setCurrentPhase]=useState(0);const[isPhaseTransition,setIsPhaseTransition]=useState(false);const[bossAttackPattern,setBossAttackPattern]=useState(null);const[lastAttackTime,setLastAttackTime]=useState(0);useEffect(()=>{if(!currentBoss)return;// Determinar fase actual basada en HP\nconst hpPercentage=bossHP/maxBossHP*100;let newPhase=0;if(hpPercentage<=25)newPhase=3;// Fase final\nelse if(hpPercentage<=50)newPhase=2;// Fase crítica\nelse if(hpPercentage<=75)newPhase=1;// Fase media\nelse newPhase=0;// Fase inicial\nif(newPhase!==currentPhase){setIsPhaseTransition(true);setTimeout(()=>{setCurrentPhase(newPhase);setIsPhaseTransition(false);},2000);}},[bossHP,maxBossHP,currentBoss,currentPhase]);useEffect(()=>{if(!currentBoss)return;// Patrón de ataque del jefe\nconst attackInterval=setInterval(()=>{const now=Date.now();const timeSinceLastAttack=now-lastAttackTime;// Frecuencia de ataque aumenta con la fase\nconst attackFrequency=Math.max(3000-currentPhase*500,1000);if(timeSinceLastAttack>attackFrequency){executeBossAttack();setLastAttackTime(now);}},1000);return()=>clearInterval(attackInterval);},[currentPhase,currentBoss,lastAttackTime]);const executeBossAttack=()=>{if(!currentBoss)return;const attacks=getBossAttacks(currentBoss.type,currentPhase);const selectedAttack=attacks[Math.floor(Math.random()*attacks.length)];setBossAttackPattern(selectedAttack);onBossAttack(selectedAttack);// Limpiar patrón después de la animación\nsetTimeout(()=>{setBossAttackPattern(null);},3000);};const getBossAttacks=(bossType,phase)=>{const baseAttacks={'aws_overlord':[{name:'Data Corruption',damage:20,effect:'Slow down timer'},{name:'Service Outage',damage:15,effect:'Disable one skill'},{name:'Security Breach',damage:25,effect:'Reduce XP gain'}],'lambda_lord':[{name:'Function Timeout',damage:18,effect:'Skip next question'},{name:'Memory Overflow',damage:22,effect:'Confuse answers'},{name:'Cold Start',damage:12,effect:'Delay next ability'}],'ec2_emperor':[{name:'Instance Termination',damage:30,effect:'High damage'},{name:'Auto Scaling',damage:10,effect:'Multiple weak attacks'},{name:'Spot Interruption',damage:25,effect:'Random damage'}],'s3_sovereign':[{name:'Bucket Flood',damage:16,effect:'Continuous damage'},{name:'Access Denied',damage:20,effect:'Block skill usage'},{name:'Glacier Freeze',damage:14,effect:'Slow effects'}]};const attacks=baseAttacks[bossType]||baseAttacks['aws_overlord'];// Modificar ataques según la fase\nreturn attacks.map(attack=>({...attack,damage:attack.damage+phase*5,// Más daño en fases avanzadas\nphase:phase}));};const getPhaseDescription=phase=>{switch(phase){case 0:return'ANALYZING TARGET';case 1:return'DEFENSIVE PROTOCOLS ACTIVE';case 2:return'AGGRESSIVE COUNTERMEASURES';case 3:return'CRITICAL SYSTEM FAILURE';default:return'UNKNOWN STATUS';}};const getBossPhaseColor=phase=>{switch(phase){case 0:return'#00FFFF';// Cyan\ncase 1:return'#FFD700';// Gold\ncase 2:return'#FF8C00';// Orange\ncase 3:return'#FF0040';// Red\ndefault:return'#FFFFFF';}};if(!currentBoss)return null;return/*#__PURE__*/_jsxs(BossContainer,{children:[/*#__PURE__*/_jsxs(PhaseIndicator,{children:[/*#__PURE__*/_jsxs(PhaseTitle,{color:getBossPhaseColor(currentPhase),children:[\"PHASE \",currentPhase+1]}),/*#__PURE__*/_jsx(PhaseDescription,{color:getBossPhaseColor(currentPhase),children:getPhaseDescription(currentPhase)})]}),isPhaseTransition&&/*#__PURE__*/_jsxs(PhaseTransition,{initial:{opacity:0,scale:0.5},animate:{opacity:1,scale:1},exit:{opacity:0,scale:1.5},transition:{duration:2},children:[/*#__PURE__*/_jsxs(TransitionText,{children:[\"PHASE \",currentPhase+1,\" INITIATED\"]}),/*#__PURE__*/_jsx(TransitionSubtext,{children:getPhaseDescription(currentPhase)})]}),bossAttackPattern&&/*#__PURE__*/_jsxs(BossAttackIndicator,{initial:{opacity:0,y:-50},animate:{opacity:1,y:0},exit:{opacity:0,y:50},transition:{duration:0.5},children:[/*#__PURE__*/_jsx(AttackName,{children:bossAttackPattern.name}),/*#__PURE__*/_jsx(AttackEffect,{children:bossAttackPattern.effect}),/*#__PURE__*/_jsxs(AttackDamage,{children:[\"-\",bossAttackPattern.damage,\" DMG\"]})]}),/*#__PURE__*/_jsx(PhaseBar,{children:[0,1,2,3].map(phase=>/*#__PURE__*/_jsx(PhaseSegment,{active:phase<=currentPhase,current:phase===currentPhase,color:getBossPhaseColor(phase),children:phase+1},phase))}),/*#__PURE__*/_jsxs(BossInfo,{children:[/*#__PURE__*/_jsx(BossName,{children:currentBoss.name}),/*#__PURE__*/_jsx(BossTitle,{children:currentBoss.title}),/*#__PURE__*/_jsx(BossDescription,{children:currentBoss.description}),/*#__PURE__*/_jsxs(BossAbilities,{children:[/*#__PURE__*/_jsx(AbilityTitle,{children:\"ACTIVE PROTOCOLS:\"}),currentBoss.abilities.slice(0,currentPhase+1).map((ability,index)=>/*#__PURE__*/_jsxs(AbilityItem,{children:[/*#__PURE__*/_jsx(AbilityIcon,{children:ability.icon}),/*#__PURE__*/_jsx(AbilityName,{children:ability.name})]},index))]})]}),/*#__PURE__*/_jsx(PhaseEffects,{phase:currentPhase})]});};// Animaciones\nconst phaseGlow=keyframes`\n  0%, 100% { \n    box-shadow: 0 0 20px currentColor;\n    text-shadow: 0 0 10px currentColor;\n  }\n  50% { \n    box-shadow: 0 0 40px currentColor, 0 0 60px currentColor;\n    text-shadow: 0 0 20px currentColor;\n  }\n`;const phaseTransition=keyframes`\n  0% { transform: scale(0.8) rotate(-10deg); opacity: 0; }\n  50% { transform: scale(1.2) rotate(5deg); opacity: 1; }\n  100% { transform: scale(1) rotate(0deg); opacity: 1; }\n`;const attackPulse=keyframes`\n  0% { transform: scale(1); }\n  50% { transform: scale(1.05); }\n  100% { transform: scale(1); }\n`;// Styled Components\nconst BossContainer=styled.div`\n  position: relative;\n  background: linear-gradient(135deg, rgba(255, 0, 64, 0.1), rgba(139, 0, 139, 0.1));\n  border: 3px solid #FF0040;\n  border-radius: 16px;\n  padding: 1.5rem;\n  margin-bottom: 2rem;\n  overflow: hidden;\n  box-shadow: 0 0 30px rgba(255, 0, 64, 0.5);\n`;const PhaseIndicator=styled.div`\n  text-align: center;\n  margin-bottom: 1rem;\n`;const PhaseTitle=styled.h2`\n  color: ${props=>props.color};\n  font-family: ${props=>props.theme.fonts.display};\n  font-size: 1.5rem;\n  margin-bottom: 0.5rem;\n  animation: ${phaseGlow} 2s ease-in-out infinite;\n`;const PhaseDescription=styled.p`\n  color: ${props=>props.color};\n  font-family: ${props=>props.theme.fonts.mono};\n  font-size: 0.9rem;\n  text-transform: uppercase;\n  letter-spacing: 0.1em;\n`;const PhaseTransition=styled(motion.div)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 100;\n  background: linear-gradient(135deg, rgba(255, 0, 64, 0.9), rgba(255, 0, 255, 0.9));\n  padding: 2rem;\n  border-radius: 20px;\n  text-align: center;\n  border: 3px solid #FF00FF;\n  box-shadow: 0 0 50px rgba(255, 0, 255, 0.8);\n`;const TransitionText=styled.div`\n  font-size: 2rem;\n  font-weight: bold;\n  color: #000;\n  font-family: ${props=>props.theme.fonts.display};\n  margin-bottom: 1rem;\n`;const TransitionSubtext=styled.div`\n  font-size: 1.2rem;\n  color: #000;\n  font-family: ${props=>props.theme.fonts.cyber};\n`;const BossAttackIndicator=styled(motion.div)`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  background: rgba(255, 0, 64, 0.9);\n  padding: 1rem;\n  border-radius: 12px;\n  border: 2px solid #FF0040;\n  z-index: 50;\n  animation: ${attackPulse} 1s ease-in-out infinite;\n`;const AttackName=styled.div`\n  font-size: 1.2rem;\n  font-weight: bold;\n  color: #FFF;\n  font-family: ${props=>props.theme.fonts.display};\n  margin-bottom: 0.5rem;\n`;const AttackEffect=styled.div`\n  font-size: 0.9rem;\n  color: #FFD700;\n  font-family: ${props=>props.theme.fonts.mono};\n  margin-bottom: 0.5rem;\n`;const AttackDamage=styled.div`\n  font-size: 1.1rem;\n  font-weight: bold;\n  color: #FF0040;\n  font-family: ${props=>props.theme.fonts.display};\n  text-align: center;\n`;const PhaseBar=styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n`;const PhaseSegment=styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  font-family: ${props=>props.theme.fonts.display};\n  border: 2px solid ${props=>props.color};\n  background: ${props=>props.active?`linear-gradient(135deg, ${props.color}, ${props.color}80)`:'transparent'};\n  color: ${props=>props.active?'#000':props.color};\n  box-shadow: ${props=>props.current?`0 0 20px ${props.color}`:'none'};\n  animation: ${props=>props.current?phaseGlow:'none'} 1s ease-in-out infinite;\n`;const BossInfo=styled.div`\n  text-align: center;\n`;const BossName=styled.h3`\n  color: #FF0040;\n  font-family: ${props=>props.theme.fonts.display};\n  font-size: 1.5rem;\n  margin-bottom: 0.5rem;\n`;const BossTitle=styled.h4`\n  color: #FF00FF;\n  font-family: ${props=>props.theme.fonts.cyber};\n  font-size: 1rem;\n  margin-bottom: 0.5rem;\n`;const BossDescription=styled.p`\n  color: #E0E0E0;\n  font-family: ${props=>props.theme.fonts.primary};\n  font-size: 0.9rem;\n  margin-bottom: 1rem;\n`;const BossAbilities=styled.div`\n  text-align: left;\n  max-width: 400px;\n  margin: 0 auto;\n`;const AbilityTitle=styled.div`\n  color: #FFD700;\n  font-family: ${props=>props.theme.fonts.mono};\n  font-size: 0.8rem;\n  margin-bottom: 0.5rem;\n  text-transform: uppercase;\n`;const AbilityItem=styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-bottom: 0.25rem;\n`;const AbilityIcon=styled.span`\n  font-size: 1rem;\n`;const AbilityName=styled.span`\n  color: #E0E0E0;\n  font-family: ${props=>props.theme.fonts.primary};\n  font-size: 0.8rem;\n`;const PhaseEffects=styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  background: ${props=>{switch(props.phase){case 0:return'radial-gradient(circle at 20% 30%, rgba(0, 255, 255, 0.1), transparent)';case 1:return'radial-gradient(circle at 80% 70%, rgba(255, 215, 0, 0.1), transparent)';case 2:return'radial-gradient(circle at 50% 50%, rgba(255, 140, 0, 0.15), transparent)';case 3:return'radial-gradient(circle at 60% 40%, rgba(255, 0, 64, 0.2), transparent)';default:return'none';}}};\n  z-index: 1;\n`;export default BossManager;","map":{"version":3,"names":["React","useState","useEffect","styled","keyframes","motion","jsxs","_jsxs","jsx","_jsx","BossManager","_ref","currentBoss","bossHP","maxBossHP","onBossDefeat","onBossAttack","questionCount","currentPhase","setCurrentPhase","isPhaseTransition","setIsPhaseTransition","bossAttackPattern","setBossAttackPattern","lastAttackTime","setLastAttackTime","hpPercentage","newPhase","setTimeout","attackInterval","setInterval","now","Date","timeSinceLastAttack","attackFrequency","Math","max","executeBossAttack","clearInterval","attacks","getBossAttacks","type","selectedAttack","floor","random","length","bossType","phase","baseAttacks","name","damage","effect","map","attack","getPhaseDescription","getBossPhaseColor","BossContainer","children","PhaseIndicator","PhaseTitle","color","PhaseDescription","PhaseTransition","initial","opacity","scale","animate","exit","transition","duration","TransitionText","TransitionSubtext","BossAttackIndicator","y","AttackName","AttackEffect","AttackDamage","PhaseBar","PhaseSegment","active","current","BossInfo","BossName","BossTitle","title","BossDescription","description","BossAbilities","AbilityTitle","abilities","slice","ability","index","AbilityItem","AbilityIcon","icon","AbilityName","PhaseEffects","phaseGlow","phaseTransition","attackPulse","div","h2","props","theme","fonts","display","p","mono","cyber","h3","h4","primary","span"],"sources":["/Users/A1064331/Desktop/AWS/Claude/Juego_Estudio_Arq_Soluciones/client/src/components/BossManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { motion } from 'framer-motion';\n\nconst BossManager = ({ \n  currentBoss, \n  bossHP, \n  maxBossHP, \n  onBossDefeat, \n  onBossAttack,\n  questionCount \n}) => {\n  const [currentPhase, setCurrentPhase] = useState(0);\n  const [isPhaseTransition, setIsPhaseTransition] = useState(false);\n  const [bossAttackPattern, setBossAttackPattern] = useState(null);\n  const [lastAttackTime, setLastAttackTime] = useState(0);\n\n  useEffect(() => {\n    if (!currentBoss) return;\n    \n    // Determinar fase actual basada en HP\n    const hpPercentage = (bossHP / maxBossHP) * 100;\n    let newPhase = 0;\n    \n    if (hpPercentage <= 25) newPhase = 3; // Fase final\n    else if (hpPercentage <= 50) newPhase = 2; // Fase crítica\n    else if (hpPercentage <= 75) newPhase = 1; // Fase media\n    else newPhase = 0; // Fase inicial\n    \n    if (newPhase !== currentPhase) {\n      setIsPhaseTransition(true);\n      setTimeout(() => {\n        setCurrentPhase(newPhase);\n        setIsPhaseTransition(false);\n      }, 2000);\n    }\n  }, [bossHP, maxBossHP, currentBoss, currentPhase]);\n\n  useEffect(() => {\n    if (!currentBoss) return;\n    \n    // Patrón de ataque del jefe\n    const attackInterval = setInterval(() => {\n      const now = Date.now();\n      const timeSinceLastAttack = now - lastAttackTime;\n      \n      // Frecuencia de ataque aumenta con la fase\n      const attackFrequency = Math.max(3000 - (currentPhase * 500), 1000);\n      \n      if (timeSinceLastAttack > attackFrequency) {\n        executeBossAttack();\n        setLastAttackTime(now);\n      }\n    }, 1000);\n\n    return () => clearInterval(attackInterval);\n  }, [currentPhase, currentBoss, lastAttackTime]);\n\n  const executeBossAttack = () => {\n    if (!currentBoss) return;\n    \n    const attacks = getBossAttacks(currentBoss.type, currentPhase);\n    const selectedAttack = attacks[Math.floor(Math.random() * attacks.length)];\n    \n    setBossAttackPattern(selectedAttack);\n    onBossAttack(selectedAttack);\n    \n    // Limpiar patrón después de la animación\n    setTimeout(() => {\n      setBossAttackPattern(null);\n    }, 3000);\n  };\n\n  const getBossAttacks = (bossType, phase) => {\n    const baseAttacks = {\n      'aws_overlord': [\n        { name: 'Data Corruption', damage: 20, effect: 'Slow down timer' },\n        { name: 'Service Outage', damage: 15, effect: 'Disable one skill' },\n        { name: 'Security Breach', damage: 25, effect: 'Reduce XP gain' }\n      ],\n      'lambda_lord': [\n        { name: 'Function Timeout', damage: 18, effect: 'Skip next question' },\n        { name: 'Memory Overflow', damage: 22, effect: 'Confuse answers' },\n        { name: 'Cold Start', damage: 12, effect: 'Delay next ability' }\n      ],\n      'ec2_emperor': [\n        { name: 'Instance Termination', damage: 30, effect: 'High damage' },\n        { name: 'Auto Scaling', damage: 10, effect: 'Multiple weak attacks' },\n        { name: 'Spot Interruption', damage: 25, effect: 'Random damage' }\n      ],\n      's3_sovereign': [\n        { name: 'Bucket Flood', damage: 16, effect: 'Continuous damage' },\n        { name: 'Access Denied', damage: 20, effect: 'Block skill usage' },\n        { name: 'Glacier Freeze', damage: 14, effect: 'Slow effects' }\n      ]\n    };\n\n    const attacks = baseAttacks[bossType] || baseAttacks['aws_overlord'];\n    \n    // Modificar ataques según la fase\n    return attacks.map(attack => ({\n      ...attack,\n      damage: attack.damage + (phase * 5), // Más daño en fases avanzadas\n      phase: phase\n    }));\n  };\n\n  const getPhaseDescription = (phase) => {\n    switch (phase) {\n      case 0: return 'ANALYZING TARGET';\n      case 1: return 'DEFENSIVE PROTOCOLS ACTIVE';\n      case 2: return 'AGGRESSIVE COUNTERMEASURES';\n      case 3: return 'CRITICAL SYSTEM FAILURE';\n      default: return 'UNKNOWN STATUS';\n    }\n  };\n\n  const getBossPhaseColor = (phase) => {\n    switch (phase) {\n      case 0: return '#00FFFF'; // Cyan\n      case 1: return '#FFD700'; // Gold\n      case 2: return '#FF8C00'; // Orange\n      case 3: return '#FF0040'; // Red\n      default: return '#FFFFFF';\n    }\n  };\n\n  if (!currentBoss) return null;\n\n  return (\n    <BossContainer>\n      {/* Indicador de Fase */}\n      <PhaseIndicator>\n        <PhaseTitle color={getBossPhaseColor(currentPhase)}>\n          PHASE {currentPhase + 1}\n        </PhaseTitle>\n        <PhaseDescription color={getBossPhaseColor(currentPhase)}>\n          {getPhaseDescription(currentPhase)}\n        </PhaseDescription>\n      </PhaseIndicator>\n\n      {/* Transición de Fase */}\n      {isPhaseTransition && (\n        <PhaseTransition\n          initial={{ opacity: 0, scale: 0.5 }}\n          animate={{ opacity: 1, scale: 1 }}\n          exit={{ opacity: 0, scale: 1.5 }}\n          transition={{ duration: 2 }}\n        >\n          <TransitionText>\n            PHASE {currentPhase + 1} INITIATED\n          </TransitionText>\n          <TransitionSubtext>\n            {getPhaseDescription(currentPhase)}\n          </TransitionSubtext>\n        </PhaseTransition>\n      )}\n\n      {/* Patrón de Ataque del Jefe */}\n      {bossAttackPattern && (\n        <BossAttackIndicator\n          initial={{ opacity: 0, y: -50 }}\n          animate={{ opacity: 1, y: 0 }}\n          exit={{ opacity: 0, y: 50 }}\n          transition={{ duration: 0.5 }}\n        >\n          <AttackName>{bossAttackPattern.name}</AttackName>\n          <AttackEffect>{bossAttackPattern.effect}</AttackEffect>\n          <AttackDamage>-{bossAttackPattern.damage} DMG</AttackDamage>\n        </BossAttackIndicator>\n      )}\n\n      {/* Barra de Fases */}\n      <PhaseBar>\n        {[0, 1, 2, 3].map((phase) => (\n          <PhaseSegment \n            key={phase}\n            active={phase <= currentPhase}\n            current={phase === currentPhase}\n            color={getBossPhaseColor(phase)}\n          >\n            {phase + 1}\n          </PhaseSegment>\n        ))}\n      </PhaseBar>\n\n      {/* Información del Jefe */}\n      <BossInfo>\n        <BossName>{currentBoss.name}</BossName>\n        <BossTitle>{currentBoss.title}</BossTitle>\n        <BossDescription>{currentBoss.description}</BossDescription>\n        \n        {/* Habilidades especiales del jefe */}\n        <BossAbilities>\n          <AbilityTitle>ACTIVE PROTOCOLS:</AbilityTitle>\n          {currentBoss.abilities.slice(0, currentPhase + 1).map((ability, index) => (\n            <AbilityItem key={index}>\n              <AbilityIcon>{ability.icon}</AbilityIcon>\n              <AbilityName>{ability.name}</AbilityName>\n            </AbilityItem>\n          ))}\n        </BossAbilities>\n      </BossInfo>\n\n      {/* Efectos de Fase */}\n      <PhaseEffects phase={currentPhase} />\n    </BossContainer>\n  );\n};\n\n// Animaciones\nconst phaseGlow = keyframes`\n  0%, 100% { \n    box-shadow: 0 0 20px currentColor;\n    text-shadow: 0 0 10px currentColor;\n  }\n  50% { \n    box-shadow: 0 0 40px currentColor, 0 0 60px currentColor;\n    text-shadow: 0 0 20px currentColor;\n  }\n`;\n\nconst phaseTransition = keyframes`\n  0% { transform: scale(0.8) rotate(-10deg); opacity: 0; }\n  50% { transform: scale(1.2) rotate(5deg); opacity: 1; }\n  100% { transform: scale(1) rotate(0deg); opacity: 1; }\n`;\n\nconst attackPulse = keyframes`\n  0% { transform: scale(1); }\n  50% { transform: scale(1.05); }\n  100% { transform: scale(1); }\n`;\n\n// Styled Components\nconst BossContainer = styled.div`\n  position: relative;\n  background: linear-gradient(135deg, rgba(255, 0, 64, 0.1), rgba(139, 0, 139, 0.1));\n  border: 3px solid #FF0040;\n  border-radius: 16px;\n  padding: 1.5rem;\n  margin-bottom: 2rem;\n  overflow: hidden;\n  box-shadow: 0 0 30px rgba(255, 0, 64, 0.5);\n`;\n\nconst PhaseIndicator = styled.div`\n  text-align: center;\n  margin-bottom: 1rem;\n`;\n\nconst PhaseTitle = styled.h2`\n  color: ${props => props.color};\n  font-family: ${props => props.theme.fonts.display};\n  font-size: 1.5rem;\n  margin-bottom: 0.5rem;\n  animation: ${phaseGlow} 2s ease-in-out infinite;\n`;\n\nconst PhaseDescription = styled.p`\n  color: ${props => props.color};\n  font-family: ${props => props.theme.fonts.mono};\n  font-size: 0.9rem;\n  text-transform: uppercase;\n  letter-spacing: 0.1em;\n`;\n\nconst PhaseTransition = styled(motion.div)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 100;\n  background: linear-gradient(135deg, rgba(255, 0, 64, 0.9), rgba(255, 0, 255, 0.9));\n  padding: 2rem;\n  border-radius: 20px;\n  text-align: center;\n  border: 3px solid #FF00FF;\n  box-shadow: 0 0 50px rgba(255, 0, 255, 0.8);\n`;\n\nconst TransitionText = styled.div`\n  font-size: 2rem;\n  font-weight: bold;\n  color: #000;\n  font-family: ${props => props.theme.fonts.display};\n  margin-bottom: 1rem;\n`;\n\nconst TransitionSubtext = styled.div`\n  font-size: 1.2rem;\n  color: #000;\n  font-family: ${props => props.theme.fonts.cyber};\n`;\n\nconst BossAttackIndicator = styled(motion.div)`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  background: rgba(255, 0, 64, 0.9);\n  padding: 1rem;\n  border-radius: 12px;\n  border: 2px solid #FF0040;\n  z-index: 50;\n  animation: ${attackPulse} 1s ease-in-out infinite;\n`;\n\nconst AttackName = styled.div`\n  font-size: 1.2rem;\n  font-weight: bold;\n  color: #FFF;\n  font-family: ${props => props.theme.fonts.display};\n  margin-bottom: 0.5rem;\n`;\n\nconst AttackEffect = styled.div`\n  font-size: 0.9rem;\n  color: #FFD700;\n  font-family: ${props => props.theme.fonts.mono};\n  margin-bottom: 0.5rem;\n`;\n\nconst AttackDamage = styled.div`\n  font-size: 1.1rem;\n  font-weight: bold;\n  color: #FF0040;\n  font-family: ${props => props.theme.fonts.display};\n  text-align: center;\n`;\n\nconst PhaseBar = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n`;\n\nconst PhaseSegment = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  font-family: ${props => props.theme.fonts.display};\n  border: 2px solid ${props => props.color};\n  background: ${props => props.active \n    ? `linear-gradient(135deg, ${props.color}, ${props.color}80)`\n    : 'transparent'\n  };\n  color: ${props => props.active ? '#000' : props.color};\n  box-shadow: ${props => props.current ? `0 0 20px ${props.color}` : 'none'};\n  animation: ${props => props.current ? phaseGlow : 'none'} 1s ease-in-out infinite;\n`;\n\nconst BossInfo = styled.div`\n  text-align: center;\n`;\n\nconst BossName = styled.h3`\n  color: #FF0040;\n  font-family: ${props => props.theme.fonts.display};\n  font-size: 1.5rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst BossTitle = styled.h4`\n  color: #FF00FF;\n  font-family: ${props => props.theme.fonts.cyber};\n  font-size: 1rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst BossDescription = styled.p`\n  color: #E0E0E0;\n  font-family: ${props => props.theme.fonts.primary};\n  font-size: 0.9rem;\n  margin-bottom: 1rem;\n`;\n\nconst BossAbilities = styled.div`\n  text-align: left;\n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nconst AbilityTitle = styled.div`\n  color: #FFD700;\n  font-family: ${props => props.theme.fonts.mono};\n  font-size: 0.8rem;\n  margin-bottom: 0.5rem;\n  text-transform: uppercase;\n`;\n\nconst AbilityItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-bottom: 0.25rem;\n`;\n\nconst AbilityIcon = styled.span`\n  font-size: 1rem;\n`;\n\nconst AbilityName = styled.span`\n  color: #E0E0E0;\n  font-family: ${props => props.theme.fonts.primary};\n  font-size: 0.8rem;\n`;\n\nconst PhaseEffects = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  background: ${props => {\n    switch (props.phase) {\n      case 0: return 'radial-gradient(circle at 20% 30%, rgba(0, 255, 255, 0.1), transparent)';\n      case 1: return 'radial-gradient(circle at 80% 70%, rgba(255, 215, 0, 0.1), transparent)';\n      case 2: return 'radial-gradient(circle at 50% 50%, rgba(255, 140, 0, 0.15), transparent)';\n      case 3: return 'radial-gradient(circle at 60% 40%, rgba(255, 0, 64, 0.2), transparent)';\n      default: return 'none';\n    }\n  }};\n  z-index: 1;\n`;\n\nexport default BossManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}