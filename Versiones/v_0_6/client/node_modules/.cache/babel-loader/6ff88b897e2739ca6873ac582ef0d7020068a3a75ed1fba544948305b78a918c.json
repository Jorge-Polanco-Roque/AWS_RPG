{"ast":null,"code":"var _jsxFileName = \"/Users/A1064331/Desktop/AWS/Claude/Juego_Estudio_Arq_Soluciones/client/src/contexts/SoundContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SoundContext = /*#__PURE__*/createContext();\nexport const useSound = () => {\n  _s();\n  const context = useContext(SoundContext);\n  if (!context) {\n    throw new Error('useSound must be used within a SoundProvider');\n  }\n  return context;\n};\n_s(useSound, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SoundProvider = ({\n  children\n}) => {\n  _s2();\n  const [soundEnabled, setSoundEnabled] = useState(() => {\n    return localStorage.getItem('cosmic_sound_enabled') !== 'false';\n  });\n  const [volume, setVolume] = useState(() => {\n    return parseFloat(localStorage.getItem('cosmic_volume')) || 0.5;\n  });\n  useEffect(() => {\n    localStorage.setItem('cosmic_sound_enabled', soundEnabled.toString());\n  }, [soundEnabled]);\n  useEffect(() => {\n    localStorage.setItem('cosmic_volume', volume.toString());\n  }, [volume]);\n\n  // Simple sound implementation using Web Audio API\n  const playSound = (soundName, options = {}) => {\n    if (!soundEnabled) return;\n    try {\n      // Create a simple beep sound for now\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      const oscillator = audioContext.createOscillator();\n      const gainNode = audioContext.createGain();\n      oscillator.connect(gainNode);\n      gainNode.connect(audioContext.destination);\n\n      // Different frequencies for different sounds\n      const frequencies = {\n        button: 800,\n        correct: 600,\n        incorrect: 300,\n        ambient: 200,\n        levelUp: 1000,\n        sanityLoss: 150,\n        cosmicHorror: 100\n      };\n      oscillator.frequency.setValueAtTime(frequencies[soundName] || 400, audioContext.currentTime);\n      oscillator.type = soundName === 'cosmicHorror' ? 'sawtooth' : 'sine';\n      gainNode.gain.setValueAtTime(volume * 0.1, audioContext.currentTime);\n      gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.1);\n      oscillator.start(audioContext.currentTime);\n      oscillator.stop(audioContext.currentTime + 0.1);\n      if (options.onEnd) {\n        setTimeout(options.onEnd, 100);\n      }\n    } catch (error) {\n      console.warn(`Failed to play sound ${soundName}:`, error);\n    }\n  };\n  const stopSound = soundName => {\n    // Simple implementation - sounds auto-stop\n  };\n  const playBackgroundMusic = () => {\n    if (!soundEnabled) return;\n    // Could implement continuous ambient sound here\n  };\n  const stopBackgroundMusic = () => {\n    // Stop ambient sound\n  };\n  const toggleSound = () => {\n    setSoundEnabled(!soundEnabled);\n  };\n  const stopAllSounds = () => {\n    // Stop all sounds\n  };\n  const setGlobalVolume = newVolume => {\n    setVolume(Math.max(0, Math.min(1, newVolume)));\n  };\n  const value = {\n    soundEnabled,\n    volume,\n    playSound,\n    stopSound,\n    playBackgroundMusic,\n    stopBackgroundMusic,\n    toggleSound,\n    stopAllSounds,\n    setGlobalVolume\n  };\n  return /*#__PURE__*/_jsxDEV(SoundContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s2(SoundProvider, \"j/zt/s2ejlLoFZIshdshDt3DnRs=\");\n_c = SoundProvider;\nvar _c;\n$RefreshReg$(_c, \"SoundProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","SoundContext","useSound","_s","context","Error","SoundProvider","children","_s2","soundEnabled","setSoundEnabled","localStorage","getItem","volume","setVolume","parseFloat","setItem","toString","playSound","soundName","options","audioContext","window","AudioContext","webkitAudioContext","oscillator","createOscillator","gainNode","createGain","connect","destination","frequencies","button","correct","incorrect","ambient","levelUp","sanityLoss","cosmicHorror","frequency","setValueAtTime","currentTime","type","gain","exponentialRampToValueAtTime","start","stop","onEnd","setTimeout","error","console","warn","stopSound","playBackgroundMusic","stopBackgroundMusic","toggleSound","stopAllSounds","setGlobalVolume","newVolume","Math","max","min","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/A1064331/Desktop/AWS/Claude/Juego_Estudio_Arq_Soluciones/client/src/contexts/SoundContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst SoundContext = createContext();\n\nexport const useSound = () => {\n  const context = useContext(SoundContext);\n  if (!context) {\n    throw new Error('useSound must be used within a SoundProvider');\n  }\n  return context;\n};\n\nexport const SoundProvider = ({ children }) => {\n  const [soundEnabled, setSoundEnabled] = useState(() => {\n    return localStorage.getItem('cosmic_sound_enabled') !== 'false';\n  });\n  const [volume, setVolume] = useState(() => {\n    return parseFloat(localStorage.getItem('cosmic_volume')) || 0.5;\n  });\n\n  useEffect(() => {\n    localStorage.setItem('cosmic_sound_enabled', soundEnabled.toString());\n  }, [soundEnabled]);\n\n  useEffect(() => {\n    localStorage.setItem('cosmic_volume', volume.toString());\n  }, [volume]);\n\n  // Simple sound implementation using Web Audio API\n  const playSound = (soundName, options = {}) => {\n    if (!soundEnabled) return;\n    \n    try {\n      // Create a simple beep sound for now\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      const oscillator = audioContext.createOscillator();\n      const gainNode = audioContext.createGain();\n      \n      oscillator.connect(gainNode);\n      gainNode.connect(audioContext.destination);\n      \n      // Different frequencies for different sounds\n      const frequencies = {\n        button: 800,\n        correct: 600,\n        incorrect: 300,\n        ambient: 200,\n        levelUp: 1000,\n        sanityLoss: 150,\n        cosmicHorror: 100\n      };\n      \n      oscillator.frequency.setValueAtTime(frequencies[soundName] || 400, audioContext.currentTime);\n      oscillator.type = soundName === 'cosmicHorror' ? 'sawtooth' : 'sine';\n      \n      gainNode.gain.setValueAtTime(volume * 0.1, audioContext.currentTime);\n      gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.1);\n      \n      oscillator.start(audioContext.currentTime);\n      oscillator.stop(audioContext.currentTime + 0.1);\n      \n      if (options.onEnd) {\n        setTimeout(options.onEnd, 100);\n      }\n    } catch (error) {\n      console.warn(`Failed to play sound ${soundName}:`, error);\n    }\n  };\n\n  const stopSound = (soundName) => {\n    // Simple implementation - sounds auto-stop\n  };\n\n  const playBackgroundMusic = () => {\n    if (!soundEnabled) return;\n    // Could implement continuous ambient sound here\n  };\n\n  const stopBackgroundMusic = () => {\n    // Stop ambient sound\n  };\n\n  const toggleSound = () => {\n    setSoundEnabled(!soundEnabled);\n  };\n\n  const stopAllSounds = () => {\n    // Stop all sounds\n  };\n\n  const setGlobalVolume = (newVolume) => {\n    setVolume(Math.max(0, Math.min(1, newVolume)));\n  };\n\n  const value = {\n    soundEnabled,\n    volume,\n    playSound,\n    stopSound,\n    playBackgroundMusic,\n    stopBackgroundMusic,\n    toggleSound,\n    stopAllSounds,\n    setGlobalVolume,\n  };\n\n  return (\n    <SoundContext.Provider value={value}>\n      {children}\n    </SoundContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}