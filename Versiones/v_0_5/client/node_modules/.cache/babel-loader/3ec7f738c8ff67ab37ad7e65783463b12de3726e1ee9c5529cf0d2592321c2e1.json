{"ast":null,"code":"import React from'react';import styled,{keyframes}from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CyberpunkBackground=()=>{return/*#__PURE__*/_jsxs(BackgroundContainer,{children:[/*#__PURE__*/_jsx(DataGrid,{}),/*#__PURE__*/_jsx(FloatingNodes,{}),/*#__PURE__*/_jsx(NeuralNebula,{}),/*#__PURE__*/_jsx(ScanLines,{})]});};const DataGrid=()=>{return/*#__PURE__*/_jsx(GridContainer,{children:Array.from({length:50}).map((_,i)=>/*#__PURE__*/_jsx(DataPoint,{style:{left:`${Math.random()*100}%`,top:`${Math.random()*100}%`,animationDelay:`${Math.random()*3}s`,animationDuration:`${2+Math.random()*3}s`}},i))});};const FloatingNodes=()=>{return/*#__PURE__*/_jsx(NodesContainer,{children:Array.from({length:15}).map((_,i)=>/*#__PURE__*/_jsx(Node,{color:i%3===0?'#00FFFF':i%3===1?'#FF00FF':'#00FF00',style:{left:`${Math.random()*100}%`,top:`${Math.random()*100}%`,animationDelay:`${Math.random()*5}s`,animationDuration:`${8+Math.random()*8}s`}},i))});};const NeuralNebula=()=>{return/*#__PURE__*/_jsx(NebulaContainer,{});};const ScanLines=()=>{return/*#__PURE__*/_jsx(ScanLineContainer,{});};// Animations\nconst neonFlicker=keyframes`\n  0%, 100% { opacity: 0.8; transform: scale(1); }\n  50% { opacity: 1; transform: scale(1.1); }\n`;const dataFloat=keyframes`\n  0%, 100% { transform: translateY(0px) translateX(0px); }\n  25% { transform: translateY(-15px) translateX(8px); }\n  50% { transform: translateY(8px) translateX(-12px); }\n  75% { transform: translateY(-10px) translateX(4px); }\n`;const neuralPulse=keyframes`\n  0%, 100% { opacity: 0.1; transform: scale(1) rotate(0deg); }\n  50% { opacity: 0.4; transform: scale(1.2) rotate(180deg); }\n`;const scanlineMove=keyframes`\n  0% { transform: translateY(-100vh); }\n  100% { transform: translateY(100vh); }\n`;// Styled Components\nconst BackgroundContainer=styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n  pointer-events: none;\n  overflow: hidden;\n  background: linear-gradient(\n    135deg,\n    #0A0A0A 0%,\n    #1A1A2E 25%,\n    #16213E 50%,\n    #1A1A2E 75%,\n    #0A0A0A 100%\n  );\n`;const GridContainer=styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n`;const DataPoint=styled.div`\n  position: absolute;\n  width: 3px;\n  height: 3px;\n  background: #00FFFF;\n  border-radius: 50%;\n  animation: ${neonFlicker} infinite ease-in-out;\n  box-shadow: 0 0 8px #00FFFF, 0 0 12px #00FFFF;\n`;const NodesContainer=styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n`;const Node=styled.div`\n  position: absolute;\n  width: 6px;\n  height: 6px;\n  background: ${props=>props.color};\n  border-radius: 50%;\n  animation: ${dataFloat} infinite ease-in-out;\n  box-shadow: 0 0 15px ${props=>props.color}, 0 0 25px ${props=>props.color};\n  opacity: 0.8;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    width: 10px;\n    height: 10px;\n    border: 1px solid ${props=>props.color};\n    border-radius: 50%;\n    animation: ${neonFlicker} 2s infinite ease-in-out;\n  }\n`;const NebulaContainer=styled.div`\n  position: absolute;\n  top: 15%;\n  left: 25%;\n  width: 500px;\n  height: 400px;\n  background: radial-gradient(\n    ellipse,\n    rgba(0, 255, 255, 0.08) 0%,\n    rgba(255, 0, 255, 0.04) 40%,\n    rgba(0, 255, 0, 0.02) 70%,\n    transparent 80%\n  );\n  border-radius: 50%;\n  animation: ${neuralPulse} 25s infinite ease-in-out;\n  filter: blur(3px);\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 60%;\n    left: 75%;\n    width: 250px;\n    height: 200px;\n    background: radial-gradient(\n      circle,\n      rgba(0, 255, 0, 0.06) 0%,\n      rgba(255, 0, 255, 0.03) 50%,\n      transparent 70%\n    );\n    border-radius: 50%;\n    animation: ${neuralPulse} 18s infinite ease-in-out reverse;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 20%;\n    left: 10%;\n    width: 180px;\n    height: 120px;\n    background: radial-gradient(\n      circle,\n      rgba(255, 0, 255, 0.05) 0%,\n      transparent 60%\n    );\n    border-radius: 50%;\n    animation: ${neuralPulse} 22s infinite ease-in-out;\n  }\n`;const ScanLineContainer=styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(90deg, transparent, #00FFFF, transparent);\n  animation: ${scanlineMove} 4s linear infinite;\n  opacity: 0.6;\n  box-shadow: 0 0 10px #00FFFF;\n`;export default CyberpunkBackground;","map":{"version":3,"names":["React","styled","keyframes","jsx","_jsx","jsxs","_jsxs","CyberpunkBackground","BackgroundContainer","children","DataGrid","FloatingNodes","NeuralNebula","ScanLines","GridContainer","Array","from","length","map","_","i","DataPoint","style","left","Math","random","top","animationDelay","animationDuration","NodesContainer","Node","color","NebulaContainer","ScanLineContainer","neonFlicker","dataFloat","neuralPulse","scanlineMove","div","props"],"sources":["/Users/A1064331/Desktop/AWS/Claude/Juego_Estudio_Arq_Soluciones/client/src/components/CyberpunkBackground.js"],"sourcesContent":["import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst CyberpunkBackground = () => {\n  return (\n    <BackgroundContainer>\n      <DataGrid />\n      <FloatingNodes />\n      <NeuralNebula />\n      <ScanLines />\n    </BackgroundContainer>\n  );\n};\n\nconst DataGrid = () => {\n  return (\n    <GridContainer>\n      {Array.from({ length: 50 }).map((_, i) => (\n        <DataPoint\n          key={i}\n          style={{\n            left: `${Math.random() * 100}%`,\n            top: `${Math.random() * 100}%`,\n            animationDelay: `${Math.random() * 3}s`,\n            animationDuration: `${2 + Math.random() * 3}s`\n          }}\n        />\n      ))}\n    </GridContainer>\n  );\n};\n\nconst FloatingNodes = () => {\n  return (\n    <NodesContainer>\n      {Array.from({ length: 15 }).map((_, i) => (\n        <Node\n          key={i}\n          color={i % 3 === 0 ? '#00FFFF' : i % 3 === 1 ? '#FF00FF' : '#00FF00'}\n          style={{\n            left: `${Math.random() * 100}%`,\n            top: `${Math.random() * 100}%`,\n            animationDelay: `${Math.random() * 5}s`,\n            animationDuration: `${8 + Math.random() * 8}s`\n          }}\n        />\n      ))}\n    </NodesContainer>\n  );\n};\n\nconst NeuralNebula = () => {\n  return <NebulaContainer />;\n};\n\nconst ScanLines = () => {\n  return <ScanLineContainer />;\n};\n\n// Animations\nconst neonFlicker = keyframes`\n  0%, 100% { opacity: 0.8; transform: scale(1); }\n  50% { opacity: 1; transform: scale(1.1); }\n`;\n\nconst dataFloat = keyframes`\n  0%, 100% { transform: translateY(0px) translateX(0px); }\n  25% { transform: translateY(-15px) translateX(8px); }\n  50% { transform: translateY(8px) translateX(-12px); }\n  75% { transform: translateY(-10px) translateX(4px); }\n`;\n\nconst neuralPulse = keyframes`\n  0%, 100% { opacity: 0.1; transform: scale(1) rotate(0deg); }\n  50% { opacity: 0.4; transform: scale(1.2) rotate(180deg); }\n`;\n\nconst scanlineMove = keyframes`\n  0% { transform: translateY(-100vh); }\n  100% { transform: translateY(100vh); }\n`;\n\n// Styled Components\nconst BackgroundContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n  pointer-events: none;\n  overflow: hidden;\n  background: linear-gradient(\n    135deg,\n    #0A0A0A 0%,\n    #1A1A2E 25%,\n    #16213E 50%,\n    #1A1A2E 75%,\n    #0A0A0A 100%\n  );\n`;\n\nconst GridContainer = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n`;\n\nconst DataPoint = styled.div`\n  position: absolute;\n  width: 3px;\n  height: 3px;\n  background: #00FFFF;\n  border-radius: 50%;\n  animation: ${neonFlicker} infinite ease-in-out;\n  box-shadow: 0 0 8px #00FFFF, 0 0 12px #00FFFF;\n`;\n\nconst NodesContainer = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Node = styled.div`\n  position: absolute;\n  width: 6px;\n  height: 6px;\n  background: ${props => props.color};\n  border-radius: 50%;\n  animation: ${dataFloat} infinite ease-in-out;\n  box-shadow: 0 0 15px ${props => props.color}, 0 0 25px ${props => props.color};\n  opacity: 0.8;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    width: 10px;\n    height: 10px;\n    border: 1px solid ${props => props.color};\n    border-radius: 50%;\n    animation: ${neonFlicker} 2s infinite ease-in-out;\n  }\n`;\n\nconst NebulaContainer = styled.div`\n  position: absolute;\n  top: 15%;\n  left: 25%;\n  width: 500px;\n  height: 400px;\n  background: radial-gradient(\n    ellipse,\n    rgba(0, 255, 255, 0.08) 0%,\n    rgba(255, 0, 255, 0.04) 40%,\n    rgba(0, 255, 0, 0.02) 70%,\n    transparent 80%\n  );\n  border-radius: 50%;\n  animation: ${neuralPulse} 25s infinite ease-in-out;\n  filter: blur(3px);\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 60%;\n    left: 75%;\n    width: 250px;\n    height: 200px;\n    background: radial-gradient(\n      circle,\n      rgba(0, 255, 0, 0.06) 0%,\n      rgba(255, 0, 255, 0.03) 50%,\n      transparent 70%\n    );\n    border-radius: 50%;\n    animation: ${neuralPulse} 18s infinite ease-in-out reverse;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 20%;\n    left: 10%;\n    width: 180px;\n    height: 120px;\n    background: radial-gradient(\n      circle,\n      rgba(255, 0, 255, 0.05) 0%,\n      transparent 60%\n    );\n    border-radius: 50%;\n    animation: ${neuralPulse} 22s infinite ease-in-out;\n  }\n`;\n\nconst ScanLineContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(90deg, transparent, #00FFFF, transparent);\n  animation: ${scanlineMove} 4s linear infinite;\n  opacity: 0.6;\n  box-shadow: 0 0 10px #00FFFF;\n`;\n\nexport default CyberpunkBackground;"],"mappings":"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,KAAK,EAAIA,KAAK,CAACR,KAAK;AACpC;AACA,eAAeI,SAAS;AACxB,yBAAyBI,KAAK,EAAIA,KAAK,CAACR,KAAK,cAAcQ,KAAK,EAAIA,KAAK,CAACR,KAAK;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBQ,KAAK,EAAIA,KAAK,CAACR,KAAK;AAC5C;AACA,iBAAiBG,WAAW;AAC5B;AACA,CAAC,CAED,KAAM,CAAAF,eAAe,CAAG/B,MAAM,CAACqC,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeF,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiBA,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiBA,WAAW;AAC5B;AACA,CAAC,CAED,KAAM,CAAAH,iBAAiB,CAAGhC,MAAM,CAACqC,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,eAAeD,YAAY;AAC3B;AACA;AACA,CAAC,CAED,cAAe,CAAA9B,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}