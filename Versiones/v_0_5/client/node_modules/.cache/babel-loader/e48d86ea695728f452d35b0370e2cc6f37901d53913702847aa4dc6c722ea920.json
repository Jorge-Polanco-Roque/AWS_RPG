{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate,useLocation}from'react-router-dom';import styled from'styled-components';import{motion}from'framer-motion';import{useGame}from'../contexts/GameContext';import{useAuth}from'../contexts/AuthContext';import{useSound}from'../contexts/SoundContext';import EntityPortrait from'../components/EntityPortrait';import CombatArena from'../components/CombatArena';import toast from'react-hot-toast';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GamePage=()=>{const navigate=useNavigate();const location=useLocation();const{playSound}=useSound();const{user}=useAuth();const{currentSession,currentQuestion,gameState,questionHistory,timeRemaining,loading,startGameSession,fetchNextQuestion,submitAnswer,endGameSession,resetGame,getGameStats,setTimeRemaining}=useGame();const[selectedAnswer,setSelectedAnswer]=useState(null);const[showExplanation,setShowExplanation]=useState(false);const[lastResult,setLastResult]=useState(null);const[hasError,setHasError]=useState(false);const[xpGained,setXpGained]=useState(0);const[levelUpAnimation,setLevelUpAnimation]=useState(false);const[streakCount,setStreakCount]=useState(0);const[comboMultiplier,setComboMultiplier]=useState(1);// Sistema de combate\nconst[playerHP,setPlayerHP]=useState(100);const[enemyHP,setEnemyHP]=useState(100);const[maxPlayerHP,setMaxPlayerHP]=useState(100);const[maxEnemyHP,setMaxEnemyHP]=useState(100);const[currentEnemy,setCurrentEnemy]=useState(null);const[combatAction,setCombatAction]=useState(null);const searchParams=new URLSearchParams(location.search);const componentFilter=searchParams.get('component');// Definiciones de personajes y enemigos\nconst playerCharacter={name:\"NEXUS-7\",emoji:\"🤖\",description:\"Advanced AI architect\"};const enemyTypes=[{name:\"VIRUS-X\",emoji:\"👾\",hp:80,description:\"Malware entity\"},{name:\"FIREWALL-9\",emoji:\"🔥\",hp:120,description:\"Security barrier\"},{name:\"CRYPTO-GHOST\",emoji:\"👻\",hp:90,description:\"Encryption phantom\"},{name:\"DATA-WORM\",emoji:\"🐛\",hp:70,description:\"Database parasite\"},{name:\"CYBER-SPIDER\",emoji:\"🕷️\",hp:100,description:\"Network crawler\"},{name:\"QUANTUM-BEAST\",emoji:\"⚡\",hp:150,description:\"Processing monster\"},{name:\"SHADOW-PROTOCOL\",emoji:\"🌑\",hp:110,description:\"Dark algorithm\"},{name:\"NEON-SENTINEL\",emoji:\"🔴\",hp:95,description:\"Guardian program\"}];useEffect(()=>{if(gameState==='idle'&&user&&!currentSession){handleStartGame();}},[gameState,user,currentSession]);useEffect(()=>{// Generar primer enemigo cuando comience el juego\nif(gameState==='playing'&&!currentEnemy){generateRandomEnemy();}},[gameState,currentEnemy]);useEffect(()=>{let interval;if(gameState==='playing'&&timeRemaining>0){interval=setInterval(()=>{setTimeRemaining(prev=>prev-1);},1000);}else if(timeRemaining===0){handleSubmitAnswer(null);}return()=>clearInterval(interval);},[gameState,timeRemaining]);const handleStartGame=async()=>{playSound('button');setHasError(false);const result=await startGameSession(componentFilter||'all');if(!result.success){setHasError(true);}};const handleSubmitAnswer=async answer=>{if(loading||selectedAnswer!==null)return;playSound('button');setSelectedAnswer(answer);setHasError(false);const result=await submitAnswer(answer);if(result.success){setLastResult(result.result);setShowExplanation(true);// Calculate XP and handle streaks\nif(result.result.correct){const baseXP=10;const streakBonus=streakCount*2;const timeBonus=timeRemaining>60?5:0;const totalXP=(baseXP+streakBonus+timeBonus)*comboMultiplier;setXpGained(totalXP);setStreakCount(prev=>prev+1);if(streakCount>0&&streakCount%5===0){setComboMultiplier(prev=>Math.min(prev+0.5,3));}// Level up check (mock)\nif(totalXP>50){setLevelUpAnimation(true);setTimeout(()=>setLevelUpAnimation(false),3000);}// Combate: Jugador ataca\nhandleCombatDamage(true);}else{setStreakCount(0);setComboMultiplier(1);setXpGained(0);// Combate: Enemigo ataca\nhandleCombatDamage(false);}setTimeout(()=>{setShowExplanation(false);setSelectedAnswer(null);setLastResult(null);setXpGained(0);if((currentSession===null||currentSession===void 0?void 0:currentSession.questionsAnswered)<65){fetchNextQuestion(currentSession.id,componentFilter?{category:componentFilter}:{});}else{endGameSession();}},5000);}else{setHasError(true);setSelectedAnswer(null);}};const handleSaveGame=()=>{if(currentSession&&currentQuestion){const saveData={session:currentSession,question:currentQuestion,questionHistory,timeRemaining,component:componentFilter,timestamp:new Date().toISOString()};localStorage.setItem('neuroArchitectSave',JSON.stringify(saveData));toast.success('Neural matrix data archived!',{icon:'💾',duration:3000});playSound('button');}};const handleReturnToMenu=()=>{playSound('button');if(currentSession&&gameState==='playing'){const confirmLeave=window.confirm('Are you sure you want to disconnect from the neural matrix? Progress will be lost unless saved.');if(!confirmLeave)return;}resetGame();navigate('/');};const handleRetryAfterError=()=>{setHasError(false);setSelectedAnswer(null);};const formatTime=seconds=>{const mins=Math.floor(seconds/60);const secs=seconds%60;return`${mins}:${secs.toString().padStart(2,'0')}`;};// Funciones de combate\nconst generateRandomEnemy=()=>{const randomEnemy=enemyTypes[Math.floor(Math.random()*enemyTypes.length)];const enemy={...randomEnemy};setCurrentEnemy(enemy);setEnemyHP(enemy.hp);setMaxEnemyHP(enemy.hp);return enemy;};const handleCombatDamage=isPlayerCorrect=>{if(isPlayerCorrect){// Jugador ataca al enemigo\nconst damage=Math.floor(Math.random()*25)+15;// 15-40 damage\nconst newEnemyHP=Math.max(0,enemyHP-damage);setEnemyHP(newEnemyHP);setCombatAction({type:'player_attack',damage:damage,enemyHP:newEnemyHP});// Si el enemigo es derrotado, generar uno nuevo\nif(newEnemyHP<=0){setTimeout(()=>{generateRandomEnemy();},2500);}}else{// Enemigo ataca al jugador\nconst damage=Math.floor(Math.random()*20)+10;// 10-30 damage\nconst newPlayerHP=Math.max(0,playerHP-damage);setPlayerHP(newPlayerHP);setCombatAction({type:'enemy_attack',damage:damage,playerHP:newPlayerHP});// Si el jugador muere, reiniciar combate\nif(newPlayerHP<=0){setTimeout(()=>{setPlayerHP(maxPlayerHP);generateRandomEnemy();},3000);}}// Limpiar acción de combate después de un tiempo\nsetTimeout(()=>{setCombatAction(null);},2000);};const handleCombatComplete=result=>{if(result==='victory'){// Bonus XP por derrotar enemigo\nsetXpGained(prev=>prev+25);}else if(result==='defeat'){// Penalty por perder\nsetStreakCount(0);setComboMultiplier(1);}};if(gameState==='idle'||loading){return/*#__PURE__*/_jsx(GameContainer,{children:/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,y:50},animate:{opacity:1,y:0},transition:{duration:0.8},children:/*#__PURE__*/_jsxs(GameCard,{className:\"cyberpunk-card\",children:[/*#__PURE__*/_jsx(Title,{className:\"cyberpunk-title\",children:\"NEURAL MATRIX INITIALIZING\"}),/*#__PURE__*/_jsx(Subtitle,{children:\"Uploading training protocols...\"}),/*#__PURE__*/_jsx(LoadingSpinner,{children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"})})]})})});}if(gameState==='ended'){const stats=getGameStats();return/*#__PURE__*/_jsx(GameContainer,{children:/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,y:50},animate:{opacity:1,y:0},transition:{duration:0.8},children:/*#__PURE__*/_jsxs(GameCard,{className:\"cyberpunk-card\",children:[/*#__PURE__*/_jsx(Title,{className:\"cyberpunk-title\",children:\"TRAINING PROTOCOL COMPLETE\"}),/*#__PURE__*/_jsx(Subtitle,{children:\"Neural pathway enhancement achieved! Analysis:\"}),/*#__PURE__*/_jsxs(StatsContainer,{children:[/*#__PURE__*/_jsxs(StatItem,{children:[/*#__PURE__*/_jsx(StatLabel,{children:\"Questions Answered:\"}),/*#__PURE__*/_jsx(StatValue,{children:stats.questionsAnswered})]}),/*#__PURE__*/_jsxs(StatItem,{children:[/*#__PURE__*/_jsx(StatLabel,{children:\"Correct Answers:\"}),/*#__PURE__*/_jsx(StatValue,{children:stats.correctAnswers})]}),/*#__PURE__*/_jsxs(StatItem,{children:[/*#__PURE__*/_jsx(StatLabel,{children:\"Accuracy:\"}),/*#__PURE__*/_jsxs(StatValue,{children:[stats.accuracy,\"%\"]})]})]}),/*#__PURE__*/_jsxs(ButtonContainer,{children:[/*#__PURE__*/_jsx(ActionButton,{onClick:handleReturnToMenu,children:\"Return to Main Menu\"}),/*#__PURE__*/_jsx(ActionButton,{onClick:handleStartGame,children:\"Start New Session\"})]})]})})});}return/*#__PURE__*/_jsxs(GameContainer,{children:[/*#__PURE__*/_jsxs(GameHeader,{children:[/*#__PURE__*/_jsxs(GameControls,{children:[/*#__PURE__*/_jsx(SaveButton,{onClick:handleSaveGame,children:\"\\uD83D\\uDCBE Save Game\"}),/*#__PURE__*/_jsx(MenuButton,{onClick:handleReturnToMenu,children:\"\\uD83C\\uDFE0 Return to Menu\"})]}),/*#__PURE__*/_jsxs(GameInfo,{children:[/*#__PURE__*/_jsxs(InfoItem,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"Question:\"}),/*#__PURE__*/_jsxs(InfoValue,{children:[(currentSession===null||currentSession===void 0?void 0:currentSession.questionsAnswered)+1,\"/65\"]})]}),/*#__PURE__*/_jsxs(InfoItem,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"Time:\"}),/*#__PURE__*/_jsx(InfoValue,{children:formatTime(timeRemaining)})]}),/*#__PURE__*/_jsxs(InfoItem,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"Accuracy:\"}),/*#__PURE__*/_jsxs(InfoValue,{children:[(currentSession===null||currentSession===void 0?void 0:currentSession.questionsAnswered)>0?(currentSession.correctAnswers/currentSession.questionsAnswered*100).toFixed(1):0,\"%\"]})]}),/*#__PURE__*/_jsxs(InfoItem,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"Streak:\"}),/*#__PURE__*/_jsxs(InfoValue,{children:[streakCount,\"x \",comboMultiplier>1&&`(${comboMultiplier}x boost)`]})]})]})]}),gameState==='playing'&&currentEnemy&&/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,y:-30},animate:{opacity:1,y:0},transition:{duration:0.6},children:/*#__PURE__*/_jsx(CombatArena,{playerCharacter:playerCharacter,enemyCharacter:currentEnemy,playerHP:playerHP,enemyHP:enemyHP,maxPlayerHP:maxPlayerHP,maxEnemyHP:maxEnemyHP,combatAction:combatAction,onCombatComplete:handleCombatComplete})}),currentQuestion&&/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,y:50},animate:{opacity:1,y:0},transition:{duration:0.6},children:/*#__PURE__*/_jsxs(QuestionCard,{className:\"cyberpunk-card\",children:[currentQuestion.cyberpunkContext&&/*#__PURE__*/_jsxs(EntitySection,{children:[/*#__PURE__*/_jsx(EntityPortrait,{entity:{name:currentQuestion.cyberpunkContext.aiName,emoji:currentQuestion.cyberpunkContext.aiEmoji||\"🤖\",description:currentQuestion.cyberpunkContext.description},size:\"medium\"}),/*#__PURE__*/_jsx(EntityFlavor,{children:currentQuestion.cyberpunkContext.neuralPrompt})]}),/*#__PURE__*/_jsx(QuestionText,{children:currentQuestion.question}),/*#__PURE__*/_jsx(OptionsContainer,{children:currentQuestion.options.map((option,index)=>/*#__PURE__*/_jsxs(OptionButton,{onClick:()=>!hasError&&handleSubmitAnswer(index),disabled:loading||selectedAnswer!==null,selected:selectedAnswer===index,className:selectedAnswer===index?'selected':'',children:[String.fromCharCode(65+index),\". \",option]},index))}),hasError&&/*#__PURE__*/_jsxs(ErrorContainer,{children:[/*#__PURE__*/_jsx(ErrorMessage,{children:\"Neural interference detected. Recalibrate your selection.\"}),/*#__PURE__*/_jsx(RetryButton,{onClick:handleRetryAfterError,children:\"RETRY NEURAL LINK\"})]})]})}),levelUpAnimation&&/*#__PURE__*/_jsxs(LevelUpOverlay,{initial:{opacity:0,scale:0.5},animate:{opacity:1,scale:1},exit:{opacity:0,scale:1.5},transition:{duration:0.8},children:[/*#__PURE__*/_jsx(LevelUpText,{children:\"\\u26A1 NEURAL UPGRADE ACHIEVED! \\u26A1\"}),/*#__PURE__*/_jsx(LevelUpSubtext,{children:\"Neural pathways enhanced\"})]}),showExplanation&&lastResult&&/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,y:50},animate:{opacity:1,y:0},transition:{duration:0.6},children:/*#__PURE__*/_jsxs(ExplanationCard,{className:\"cyberpunk-card\",children:[/*#__PURE__*/_jsx(ExplanationHeader,{correct:lastResult.correct,children:lastResult.correct?'⚡ NEURAL SYNC COMPLETE!':'🔴 NEURAL DESYNC'}),lastResult.correct&&xpGained>0&&/*#__PURE__*/_jsxs(XPGainContainer,{children:[/*#__PURE__*/_jsxs(XPText,{children:[\"+\",xpGained,\" XP\"]}),streakCount>1&&/*#__PURE__*/_jsxs(StreakText,{children:[\"\\uD83D\\uDD25 \",streakCount,\" streak!\"]}),comboMultiplier>1&&/*#__PURE__*/_jsxs(ComboText,{children:[\"\\uD83D\\uDCA5 \",comboMultiplier,\"x multiplier!\"]})]}),/*#__PURE__*/_jsx(ExplanationText,{children:lastResult.explanation}),lastResult.aiResponse&&/*#__PURE__*/_jsx(AIResponse,{children:lastResult.aiResponse})]})})]});};const GameContainer=styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  max-width: 1200px;\n  margin: 0 auto;\n`;const GameHeader=styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n  padding: 1rem;\n  background: ${props=>props.theme.colors.surface};\n  border-radius: 16px;\n  border: 1px solid ${props=>props.theme.colors.border};\n  box-shadow: ${props=>props.theme.shadows.sm};\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 1rem;\n  }\n`;const GameControls=styled.div`\n  display: flex;\n  gap: 1rem;\n`;const SaveButton=styled.button`\n  background: linear-gradient(135deg, ${props=>props.theme.colors.info}, ${props=>props.theme.colors.primary});\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 12px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: ${props=>props.theme.shadows.sm};\n  \n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: ${props=>props.theme.shadows.md};\n  }\n`;const MenuButton=styled.button`\n  background: linear-gradient(135deg, ${props=>props.theme.colors.error}, #DC2626);\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 12px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: ${props=>props.theme.shadows.sm};\n  \n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: ${props=>props.theme.shadows.md};\n  }\n`;const GameInfo=styled.div`\n  display: flex;\n  gap: 2rem;\n  \n  @media (max-width: 768px) {\n    gap: 1rem;\n  }\n`;const InfoItem=styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;const InfoLabel=styled.span`\n  font-size: 0.8rem;\n  color: ${props=>props.theme.colors.textSecondary};\n`;const InfoValue=styled.span`\n  font-size: 1.2rem;\n  font-weight: bold;\n  color: ${props=>props.theme.colors.primary};\n`;const GameCard=styled.div`\n  max-width: 800px;\n  width: 100%;\n  text-align: center;\n  margin: 0 auto;\n`;const QuestionCard=styled.div`\n  margin-bottom: 2rem;\n  text-align: left;\n`;const EntitySection=styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  margin-bottom: 2rem;\n  padding: 1rem;\n  background: ${props=>props.theme.colors.backgroundDark};\n  border-radius: 8px;\n  border: 1px solid ${props=>props.theme.colors.secondary};\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    text-align: center;\n  }\n`;const EntityFlavor=styled.p`\n  color: ${props=>props.theme.colors.accent};\n  font-style: italic;\n  font-size: 0.9rem;\n  margin: 0;\n`;const QuestionText=styled.p`\n  font-size: 1.1rem;\n  line-height: 1.6;\n  margin-bottom: 2rem;\n  color: ${props=>props.theme.colors.text};\n`;const OptionsContainer=styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;const OptionButton=styled.button`\n  background: ${props=>props.selected?`linear-gradient(45deg, ${props.theme.colors.primary}, ${props.theme.colors.secondary})`:`linear-gradient(135deg, ${props.theme.colors.backgroundMedium}, ${props.theme.colors.surface})`};\n  color: ${props=>props.theme.colors.text};\n  border: 2px solid ${props=>props.selected?props.theme.colors.primary:props.theme.colors.accent};\n  padding: 1rem;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  text-align: left;\n  font-size: 1rem;\n  \n  &:hover:not(:disabled) {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(116, 0, 184, 0.3);\n    border-color: ${props=>props.theme.colors.primary};\n  }\n  \n  &:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n`;const ErrorContainer=styled.div`\n  margin-top: 2rem;\n  padding: 1rem;\n  background: linear-gradient(135deg, #FF6B6B, #FF8E8E);\n  border-radius: 8px;\n  text-align: center;\n`;const ErrorMessage=styled.p`\n  color: white;\n  margin-bottom: 1rem;\n  font-size: 1rem;\n`;const RetryButton=styled.button`\n  background: white;\n  color: #FF6B6B;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 8px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(255, 255, 255, 0.3);\n  }\n`;const ExplanationCard=styled.div`\n  margin-top: 2rem;\n  text-align: left;\n`;const ExplanationHeader=styled.h3`\n  color: ${props=>props.correct?'#00ff88':'#ff0066'};\n  margin-bottom: 1rem;\n  font-size: 1.5rem;\n`;const ExplanationText=styled.p`\n  color: ${props=>props.theme.colors.text};\n  line-height: 1.6;\n  margin-bottom: 1rem;\n`;const AIResponse=styled.p`\n  color: ${props=>props.theme.colors.accent};\n  font-style: italic;\n  font-size: 0.9rem;\n  margin: 0;\n  border-left: 3px solid ${props=>props.theme.colors.primary};\n  padding-left: 1rem;\n  background: rgba(0, 255, 255, 0.05);\n  margin-top: 1rem;\n  padding: 1rem;\n  border-radius: 8px;\n`;const StatsContainer=styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  margin: 2rem 0;\n`;const StatItem=styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 1rem;\n  background: ${props=>props.theme.colors.backgroundMedium};\n  border-radius: 8px;\n  border: 1px solid ${props=>props.theme.colors.accent};\n`;const StatLabel=styled.span`\n  color: ${props=>props.theme.colors.textSecondary};\n`;const StatValue=styled.span`\n  color: ${props=>props.theme.colors.primary};\n  font-weight: bold;\n`;const ButtonContainer=styled.div`\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n  margin-top: 2rem;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;const ActionButton=styled.button`\n  background: linear-gradient(45deg, ${props=>props.theme.colors.primary}, ${props=>props.theme.colors.secondary});\n  color: white;\n  border: none;\n  padding: 1rem 2rem;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(116, 0, 184, 0.3);\n  }\n`;const Title=styled.h1`\n  font-size: 3rem;\n  margin-bottom: 1rem;\n  \n  @media (max-width: 768px) {\n    font-size: 2rem;\n  }\n`;const Subtitle=styled.p`\n  color: ${props=>props.theme.colors.textSecondary};\n  margin-bottom: 2rem;\n  font-size: 1.2rem;\n`;const LoadingSpinner=styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 2rem 0;\n  \n  .spinner {\n    width: 40px;\n    height: 40px;\n    border: 3px solid ${props=>props.theme.colors.backgroundMedium};\n    border-top: 3px solid ${props=>props.theme.colors.primary};\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n  }\n  \n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;const XPGainContainer=styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem 0;\n  padding: 1rem;\n  background: linear-gradient(135deg, rgba(0, 255, 255, 0.1), rgba(0, 255, 0, 0.1));\n  border: 2px solid ${props=>props.theme.colors.accent};\n  border-radius: 12px;\n  animation: neonPulse 2s ease-in-out infinite;\n`;const XPText=styled.div`\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: ${props=>props.theme.colors.accent};\n  font-family: ${props=>props.theme.fonts.display};\n  text-shadow: 0 0 10px ${props=>props.theme.colors.accent};\n`;const StreakText=styled.div`\n  font-size: 1rem;\n  color: ${props=>props.theme.colors.warning};\n  font-family: ${props=>props.theme.fonts.cyber};\n  margin-top: 0.5rem;\n`;const ComboText=styled.div`\n  font-size: 1rem;\n  color: ${props=>props.theme.colors.secondary};\n  font-family: ${props=>props.theme.fonts.cyber};\n  margin-top: 0.25rem;\n`;const LevelUpOverlay=styled(motion.div)`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1000;\n  background: linear-gradient(135deg, rgba(0, 255, 255, 0.9), rgba(0, 255, 0, 0.9));\n  padding: 3rem;\n  border-radius: 20px;\n  text-align: center;\n  border: 3px solid ${props=>props.theme.colors.primary};\n  box-shadow: 0 0 50px ${props=>props.theme.colors.primary};\n`;const LevelUpText=styled.div`\n  font-size: 2.5rem;\n  font-weight: bold;\n  color: #000;\n  font-family: ${props=>props.theme.fonts.display};\n  margin-bottom: 1rem;\n  animation: pulse 1s ease-in-out infinite;\n`;const LevelUpSubtext=styled.div`\n  font-size: 1.2rem;\n  color: #000;\n  font-family: ${props=>props.theme.fonts.cyber};\n`;export default GamePage;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","styled","motion","useGame","useAuth","useSound","EntityPortrait","CombatArena","toast","jsx","_jsx","jsxs","_jsxs","GamePage","navigate","location","playSound","user","currentSession","currentQuestion","gameState","questionHistory","timeRemaining","loading","startGameSession","fetchNextQuestion","submitAnswer","endGameSession","resetGame","getGameStats","setTimeRemaining","selectedAnswer","setSelectedAnswer","showExplanation","setShowExplanation","lastResult","setLastResult","hasError","setHasError","xpGained","setXpGained","levelUpAnimation","setLevelUpAnimation","streakCount","setStreakCount","comboMultiplier","setComboMultiplier","playerHP","setPlayerHP","enemyHP","setEnemyHP","maxPlayerHP","setMaxPlayerHP","maxEnemyHP","setMaxEnemyHP","currentEnemy","setCurrentEnemy","combatAction","setCombatAction","searchParams","URLSearchParams","search","componentFilter","get","playerCharacter","name","emoji","description","enemyTypes","hp","handleStartGame","generateRandomEnemy","interval","setInterval","prev","handleSubmitAnswer","clearInterval","result","success","answer","correct","baseXP","streakBonus","timeBonus","totalXP","Math","min","setTimeout","handleCombatDamage","questionsAnswered","id","category","handleSaveGame","saveData","session","question","component","timestamp","Date","toISOString","localStorage","setItem","JSON","stringify","icon","duration","handleReturnToMenu","confirmLeave","window","confirm","handleRetryAfterError","formatTime","seconds","mins","floor","secs","toString","padStart","randomEnemy","random","length","enemy","isPlayerCorrect","damage","newEnemyHP","max","type","newPlayerHP","handleCombatComplete","GameContainer","children","div","initial","opacity","y","animate","transition","GameCard","className","Title","Subtitle","LoadingSpinner","stats","StatsContainer","StatItem","StatLabel","StatValue","correctAnswers","accuracy","ButtonContainer","ActionButton","onClick","GameHeader","GameControls","SaveButton","MenuButton","GameInfo","InfoItem","InfoLabel","InfoValue","toFixed","enemyCharacter","onCombatComplete","QuestionCard","cyberpunkContext","EntitySection","entity","aiName","aiEmoji","size","EntityFlavor","neuralPrompt","QuestionText","OptionsContainer","options","map","option","index","OptionButton","disabled","selected","String","fromCharCode","ErrorContainer","ErrorMessage","RetryButton","LevelUpOverlay","scale","exit","LevelUpText","LevelUpSubtext","ExplanationCard","ExplanationHeader","XPGainContainer","XPText","StreakText","ComboText","ExplanationText","explanation","aiResponse","AIResponse","props","theme","colors","surface","border","shadows","sm","button","info","primary","md","error","span","textSecondary","backgroundDark","secondary","p","accent","text","backgroundMedium","h3","h1","fonts","display","warning","cyber"],"sources":["/Users/A1064331/Desktop/AWS/Claude/Juego_Estudio_Arq_Soluciones/client/src/pages/GamePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { useGame } from '../contexts/GameContext';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useSound } from '../contexts/SoundContext';\nimport EntityPortrait from '../components/EntityPortrait';\nimport CombatArena from '../components/CombatArena';\nimport toast from 'react-hot-toast';\n\nconst GamePage = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { playSound } = useSound();\n  const { user } = useAuth();\n  const {\n    currentSession,\n    currentQuestion,\n    gameState,\n    questionHistory,\n    timeRemaining,\n    loading,\n    startGameSession,\n    fetchNextQuestion,\n    submitAnswer,\n    endGameSession,\n    resetGame,\n    getGameStats,\n    setTimeRemaining,\n  } = useGame();\n\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [showExplanation, setShowExplanation] = useState(false);\n  const [lastResult, setLastResult] = useState(null);\n  const [hasError, setHasError] = useState(false);\n  const [xpGained, setXpGained] = useState(0);\n  const [levelUpAnimation, setLevelUpAnimation] = useState(false);\n  const [streakCount, setStreakCount] = useState(0);\n  const [comboMultiplier, setComboMultiplier] = useState(1);\n  \n  // Sistema de combate\n  const [playerHP, setPlayerHP] = useState(100);\n  const [enemyHP, setEnemyHP] = useState(100);\n  const [maxPlayerHP, setMaxPlayerHP] = useState(100);\n  const [maxEnemyHP, setMaxEnemyHP] = useState(100);\n  const [currentEnemy, setCurrentEnemy] = useState(null);\n  const [combatAction, setCombatAction] = useState(null);\n\n  const searchParams = new URLSearchParams(location.search);\n  const componentFilter = searchParams.get('component');\n\n  // Definiciones de personajes y enemigos\n  const playerCharacter = {\n    name: \"NEXUS-7\",\n    emoji: \"🤖\",\n    description: \"Advanced AI architect\"\n  };\n\n  const enemyTypes = [\n    { name: \"VIRUS-X\", emoji: \"👾\", hp: 80, description: \"Malware entity\" },\n    { name: \"FIREWALL-9\", emoji: \"🔥\", hp: 120, description: \"Security barrier\" },\n    { name: \"CRYPTO-GHOST\", emoji: \"👻\", hp: 90, description: \"Encryption phantom\" },\n    { name: \"DATA-WORM\", emoji: \"🐛\", hp: 70, description: \"Database parasite\" },\n    { name: \"CYBER-SPIDER\", emoji: \"🕷️\", hp: 100, description: \"Network crawler\" },\n    { name: \"QUANTUM-BEAST\", emoji: \"⚡\", hp: 150, description: \"Processing monster\" },\n    { name: \"SHADOW-PROTOCOL\", emoji: \"🌑\", hp: 110, description: \"Dark algorithm\" },\n    { name: \"NEON-SENTINEL\", emoji: \"🔴\", hp: 95, description: \"Guardian program\" }\n  ];\n\n  useEffect(() => {\n    if (gameState === 'idle' && user && !currentSession) {\n      handleStartGame();\n    }\n  }, [gameState, user, currentSession]);\n\n  useEffect(() => {\n    // Generar primer enemigo cuando comience el juego\n    if (gameState === 'playing' && !currentEnemy) {\n      generateRandomEnemy();\n    }\n  }, [gameState, currentEnemy]);\n\n  useEffect(() => {\n    let interval;\n    if (gameState === 'playing' && timeRemaining > 0) {\n      interval = setInterval(() => {\n        setTimeRemaining(prev => prev - 1);\n      }, 1000);\n    } else if (timeRemaining === 0) {\n      handleSubmitAnswer(null);\n    }\n    return () => clearInterval(interval);\n  }, [gameState, timeRemaining]);\n\n  const handleStartGame = async () => {\n    playSound('button');\n    setHasError(false);\n    const result = await startGameSession(componentFilter || 'all');\n    if (!result.success) {\n      setHasError(true);\n    }\n  };\n\n  const handleSubmitAnswer = async (answer) => {\n    if (loading || selectedAnswer !== null) return;\n    \n    playSound('button');\n    setSelectedAnswer(answer);\n    setHasError(false);\n    \n    const result = await submitAnswer(answer);\n    if (result.success) {\n      setLastResult(result.result);\n      setShowExplanation(true);\n      \n      // Calculate XP and handle streaks\n      if (result.result.correct) {\n        const baseXP = 10;\n        const streakBonus = streakCount * 2;\n        const timeBonus = timeRemaining > 60 ? 5 : 0;\n        const totalXP = (baseXP + streakBonus + timeBonus) * comboMultiplier;\n        \n        setXpGained(totalXP);\n        setStreakCount(prev => prev + 1);\n        \n        if (streakCount > 0 && streakCount % 5 === 0) {\n          setComboMultiplier(prev => Math.min(prev + 0.5, 3));\n        }\n        \n        // Level up check (mock)\n        if (totalXP > 50) {\n          setLevelUpAnimation(true);\n          setTimeout(() => setLevelUpAnimation(false), 3000);\n        }\n\n        // Combate: Jugador ataca\n        handleCombatDamage(true);\n      } else {\n        setStreakCount(0);\n        setComboMultiplier(1);\n        setXpGained(0);\n        \n        // Combate: Enemigo ataca\n        handleCombatDamage(false);\n      }\n      \n      setTimeout(() => {\n        setShowExplanation(false);\n        setSelectedAnswer(null);\n        setLastResult(null);\n        setXpGained(0);\n        \n        if (currentSession?.questionsAnswered < 65) {\n          fetchNextQuestion(currentSession.id, componentFilter ? { category: componentFilter } : {});\n        } else {\n          endGameSession();\n        }\n      }, 5000);\n    } else {\n      setHasError(true);\n      setSelectedAnswer(null);\n    }\n  };\n\n  const handleSaveGame = () => {\n    if (currentSession && currentQuestion) {\n      const saveData = {\n        session: currentSession,\n        question: currentQuestion,\n        questionHistory,\n        timeRemaining,\n        component: componentFilter,\n        timestamp: new Date().toISOString(),\n      };\n      \n      localStorage.setItem('neuroArchitectSave', JSON.stringify(saveData));\n      \n      toast.success('Neural matrix data archived!', {\n        icon: '💾',\n        duration: 3000,\n      });\n      \n      playSound('button');\n    }\n  };\n\n  const handleReturnToMenu = () => {\n    playSound('button');\n    if (currentSession && gameState === 'playing') {\n      const confirmLeave = window.confirm('Are you sure you want to disconnect from the neural matrix? Progress will be lost unless saved.');\n      if (!confirmLeave) return;\n    }\n    \n    resetGame();\n    navigate('/');\n  };\n\n  const handleRetryAfterError = () => {\n    setHasError(false);\n    setSelectedAnswer(null);\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Funciones de combate\n  const generateRandomEnemy = () => {\n    const randomEnemy = enemyTypes[Math.floor(Math.random() * enemyTypes.length)];\n    const enemy = { ...randomEnemy };\n    setCurrentEnemy(enemy);\n    setEnemyHP(enemy.hp);\n    setMaxEnemyHP(enemy.hp);\n    return enemy;\n  };\n\n  const handleCombatDamage = (isPlayerCorrect) => {\n    if (isPlayerCorrect) {\n      // Jugador ataca al enemigo\n      const damage = Math.floor(Math.random() * 25) + 15; // 15-40 damage\n      const newEnemyHP = Math.max(0, enemyHP - damage);\n      setEnemyHP(newEnemyHP);\n      \n      setCombatAction({\n        type: 'player_attack',\n        damage: damage,\n        enemyHP: newEnemyHP\n      });\n\n      // Si el enemigo es derrotado, generar uno nuevo\n      if (newEnemyHP <= 0) {\n        setTimeout(() => {\n          generateRandomEnemy();\n        }, 2500);\n      }\n    } else {\n      // Enemigo ataca al jugador\n      const damage = Math.floor(Math.random() * 20) + 10; // 10-30 damage\n      const newPlayerHP = Math.max(0, playerHP - damage);\n      setPlayerHP(newPlayerHP);\n      \n      setCombatAction({\n        type: 'enemy_attack',\n        damage: damage,\n        playerHP: newPlayerHP\n      });\n\n      // Si el jugador muere, reiniciar combate\n      if (newPlayerHP <= 0) {\n        setTimeout(() => {\n          setPlayerHP(maxPlayerHP);\n          generateRandomEnemy();\n        }, 3000);\n      }\n    }\n\n    // Limpiar acción de combate después de un tiempo\n    setTimeout(() => {\n      setCombatAction(null);\n    }, 2000);\n  };\n\n  const handleCombatComplete = (result) => {\n    if (result === 'victory') {\n      // Bonus XP por derrotar enemigo\n      setXpGained(prev => prev + 25);\n    } else if (result === 'defeat') {\n      // Penalty por perder\n      setStreakCount(0);\n      setComboMultiplier(1);\n    }\n  };\n\n  if (gameState === 'idle' || loading) {\n    return (\n      <GameContainer>\n        <motion.div\n          initial={{ opacity: 0, y: 50 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n        >\n          <GameCard className=\"cyberpunk-card\">\n            <Title className=\"cyberpunk-title\">NEURAL MATRIX INITIALIZING</Title>\n            <Subtitle>Uploading training protocols...</Subtitle>\n            <LoadingSpinner>\n              <div className=\"spinner\"></div>\n            </LoadingSpinner>\n          </GameCard>\n        </motion.div>\n      </GameContainer>\n    );\n  }\n\n  if (gameState === 'ended') {\n    const stats = getGameStats();\n    return (\n      <GameContainer>\n        <motion.div\n          initial={{ opacity: 0, y: 50 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n        >\n          <GameCard className=\"cyberpunk-card\">\n            <Title className=\"cyberpunk-title\">TRAINING PROTOCOL COMPLETE</Title>\n            <Subtitle>Neural pathway enhancement achieved! Analysis:</Subtitle>\n            \n            <StatsContainer>\n              <StatItem>\n                <StatLabel>Questions Answered:</StatLabel>\n                <StatValue>{stats.questionsAnswered}</StatValue>\n              </StatItem>\n              <StatItem>\n                <StatLabel>Correct Answers:</StatLabel>\n                <StatValue>{stats.correctAnswers}</StatValue>\n              </StatItem>\n              <StatItem>\n                <StatLabel>Accuracy:</StatLabel>\n                <StatValue>{stats.accuracy}%</StatValue>\n              </StatItem>\n            </StatsContainer>\n            \n            <ButtonContainer>\n              <ActionButton onClick={handleReturnToMenu}>\n                Return to Main Menu\n              </ActionButton>\n              <ActionButton onClick={handleStartGame}>\n                Start New Session\n              </ActionButton>\n            </ButtonContainer>\n          </GameCard>\n        </motion.div>\n      </GameContainer>\n    );\n  }\n\n  return (\n    <GameContainer>\n      <GameHeader>\n        <GameControls>\n          <SaveButton onClick={handleSaveGame}>\n            💾 Save Game\n          </SaveButton>\n          <MenuButton onClick={handleReturnToMenu}>\n            🏠 Return to Menu\n          </MenuButton>\n        </GameControls>\n        \n        <GameInfo>\n          <InfoItem>\n            <InfoLabel>Question:</InfoLabel>\n            <InfoValue>{currentSession?.questionsAnswered + 1}/65</InfoValue>\n          </InfoItem>\n          <InfoItem>\n            <InfoLabel>Time:</InfoLabel>\n            <InfoValue>{formatTime(timeRemaining)}</InfoValue>\n          </InfoItem>\n          <InfoItem>\n            <InfoLabel>Accuracy:</InfoLabel>\n            <InfoValue>\n              {currentSession?.questionsAnswered > 0 \n                ? ((currentSession.correctAnswers / currentSession.questionsAnswered) * 100).toFixed(1)\n                : 0}%\n            </InfoValue>\n          </InfoItem>\n          <InfoItem>\n            <InfoLabel>Streak:</InfoLabel>\n            <InfoValue>\n              {streakCount}x {comboMultiplier > 1 && `(${comboMultiplier}x boost)`}\n            </InfoValue>\n          </InfoItem>\n        </GameInfo>\n      </GameHeader>\n\n      {/* Arena de Combate */}\n      {gameState === 'playing' && currentEnemy && (\n        <motion.div\n          initial={{ opacity: 0, y: -30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <CombatArena\n            playerCharacter={playerCharacter}\n            enemyCharacter={currentEnemy}\n            playerHP={playerHP}\n            enemyHP={enemyHP}\n            maxPlayerHP={maxPlayerHP}\n            maxEnemyHP={maxEnemyHP}\n            combatAction={combatAction}\n            onCombatComplete={handleCombatComplete}\n          />\n        </motion.div>\n      )}\n\n      {currentQuestion && (\n        <motion.div\n          initial={{ opacity: 0, y: 50 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <QuestionCard className=\"cyberpunk-card\">\n            {currentQuestion.cyberpunkContext && (\n              <EntitySection>\n                <EntityPortrait \n                  entity={{\n                    name: currentQuestion.cyberpunkContext.aiName,\n                    emoji: currentQuestion.cyberpunkContext.aiEmoji || \"🤖\",\n                    description: currentQuestion.cyberpunkContext.description\n                  }}\n                  size=\"medium\"\n                />\n                <EntityFlavor>\n                  {currentQuestion.cyberpunkContext.neuralPrompt}\n                </EntityFlavor>\n              </EntitySection>\n            )}\n            \n            <QuestionText>{currentQuestion.question}</QuestionText>\n            \n            <OptionsContainer>\n              {currentQuestion.options.map((option, index) => (\n                <OptionButton\n                  key={index}\n                  onClick={() => !hasError && handleSubmitAnswer(index)}\n                  disabled={loading || selectedAnswer !== null}\n                  selected={selectedAnswer === index}\n                  className={selectedAnswer === index ? 'selected' : ''}\n                >\n                  {String.fromCharCode(65 + index)}. {option}\n                </OptionButton>\n              ))}\n            </OptionsContainer>\n\n            {hasError && (\n              <ErrorContainer>\n                <ErrorMessage>\n                  Neural interference detected. Recalibrate your selection.\n                </ErrorMessage>\n                <RetryButton onClick={handleRetryAfterError}>\n                  RETRY NEURAL LINK\n                </RetryButton>\n              </ErrorContainer>\n            )}\n          </QuestionCard>\n        </motion.div>\n      )}\n\n      {levelUpAnimation && (\n        <LevelUpOverlay\n          initial={{ opacity: 0, scale: 0.5 }}\n          animate={{ opacity: 1, scale: 1 }}\n          exit={{ opacity: 0, scale: 1.5 }}\n          transition={{ duration: 0.8 }}\n        >\n          <LevelUpText>⚡ NEURAL UPGRADE ACHIEVED! ⚡</LevelUpText>\n          <LevelUpSubtext>Neural pathways enhanced</LevelUpSubtext>\n        </LevelUpOverlay>\n      )}\n      \n      {showExplanation && lastResult && (\n        <motion.div\n          initial={{ opacity: 0, y: 50 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <ExplanationCard className=\"cyberpunk-card\">\n            <ExplanationHeader correct={lastResult.correct}>\n              {lastResult.correct ? '⚡ NEURAL SYNC COMPLETE!' : '🔴 NEURAL DESYNC'}\n            </ExplanationHeader>\n            \n            {lastResult.correct && xpGained > 0 && (\n              <XPGainContainer>\n                <XPText>+{xpGained} XP</XPText>\n                {streakCount > 1 && <StreakText>🔥 {streakCount} streak!</StreakText>}\n                {comboMultiplier > 1 && <ComboText>💥 {comboMultiplier}x multiplier!</ComboText>}\n              </XPGainContainer>\n            )}\n            \n            <ExplanationText>\n              {lastResult.explanation}\n            </ExplanationText>\n            {lastResult.aiResponse && (\n              <AIResponse>\n                {lastResult.aiResponse}\n              </AIResponse>\n            )}\n          </ExplanationCard>\n        </motion.div>\n      )}\n    </GameContainer>\n  );\n};\n\nconst GameContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst GameHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n  padding: 1rem;\n  background: ${props => props.theme.colors.surface};\n  border-radius: 16px;\n  border: 1px solid ${props => props.theme.colors.border};\n  box-shadow: ${props => props.theme.shadows.sm};\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 1rem;\n  }\n`;\n\nconst GameControls = styled.div`\n  display: flex;\n  gap: 1rem;\n`;\n\nconst SaveButton = styled.button`\n  background: linear-gradient(135deg, ${props => props.theme.colors.info}, ${props => props.theme.colors.primary});\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 12px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: ${props => props.theme.shadows.sm};\n  \n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: ${props => props.theme.shadows.md};\n  }\n`;\n\nconst MenuButton = styled.button`\n  background: linear-gradient(135deg, ${props => props.theme.colors.error}, #DC2626);\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 12px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: ${props => props.theme.shadows.sm};\n  \n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: ${props => props.theme.shadows.md};\n  }\n`;\n\nconst GameInfo = styled.div`\n  display: flex;\n  gap: 2rem;\n  \n  @media (max-width: 768px) {\n    gap: 1rem;\n  }\n`;\n\nconst InfoItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst InfoLabel = styled.span`\n  font-size: 0.8rem;\n  color: ${props => props.theme.colors.textSecondary};\n`;\n\nconst InfoValue = styled.span`\n  font-size: 1.2rem;\n  font-weight: bold;\n  color: ${props => props.theme.colors.primary};\n`;\n\nconst GameCard = styled.div`\n  max-width: 800px;\n  width: 100%;\n  text-align: center;\n  margin: 0 auto;\n`;\n\nconst QuestionCard = styled.div`\n  margin-bottom: 2rem;\n  text-align: left;\n`;\n\nconst EntitySection = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  margin-bottom: 2rem;\n  padding: 1rem;\n  background: ${props => props.theme.colors.backgroundDark};\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.secondary};\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    text-align: center;\n  }\n`;\n\nconst EntityFlavor = styled.p`\n  color: ${props => props.theme.colors.accent};\n  font-style: italic;\n  font-size: 0.9rem;\n  margin: 0;\n`;\n\nconst QuestionText = styled.p`\n  font-size: 1.1rem;\n  line-height: 1.6;\n  margin-bottom: 2rem;\n  color: ${props => props.theme.colors.text};\n`;\n\nconst OptionsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst OptionButton = styled.button`\n  background: ${props => props.selected \n    ? `linear-gradient(45deg, ${props.theme.colors.primary}, ${props.theme.colors.secondary})`\n    : `linear-gradient(135deg, ${props.theme.colors.backgroundMedium}, ${props.theme.colors.surface})`\n  };\n  color: ${props => props.theme.colors.text};\n  border: 2px solid ${props => props.selected \n    ? props.theme.colors.primary \n    : props.theme.colors.accent\n  };\n  padding: 1rem;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  text-align: left;\n  font-size: 1rem;\n  \n  &:hover:not(:disabled) {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(116, 0, 184, 0.3);\n    border-color: ${props => props.theme.colors.primary};\n  }\n  \n  &:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n`;\n\nconst ErrorContainer = styled.div`\n  margin-top: 2rem;\n  padding: 1rem;\n  background: linear-gradient(135deg, #FF6B6B, #FF8E8E);\n  border-radius: 8px;\n  text-align: center;\n`;\n\nconst ErrorMessage = styled.p`\n  color: white;\n  margin-bottom: 1rem;\n  font-size: 1rem;\n`;\n\nconst RetryButton = styled.button`\n  background: white;\n  color: #FF6B6B;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 8px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(255, 255, 255, 0.3);\n  }\n`;\n\nconst ExplanationCard = styled.div`\n  margin-top: 2rem;\n  text-align: left;\n`;\n\nconst ExplanationHeader = styled.h3`\n  color: ${props => props.correct ? '#00ff88' : '#ff0066'};\n  margin-bottom: 1rem;\n  font-size: 1.5rem;\n`;\n\nconst ExplanationText = styled.p`\n  color: ${props => props.theme.colors.text};\n  line-height: 1.6;\n  margin-bottom: 1rem;\n`;\n\nconst AIResponse = styled.p`\n  color: ${props => props.theme.colors.accent};\n  font-style: italic;\n  font-size: 0.9rem;\n  margin: 0;\n  border-left: 3px solid ${props => props.theme.colors.primary};\n  padding-left: 1rem;\n  background: rgba(0, 255, 255, 0.05);\n  margin-top: 1rem;\n  padding: 1rem;\n  border-radius: 8px;\n`;\n\nconst StatsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  margin: 2rem 0;\n`;\n\nconst StatItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 1rem;\n  background: ${props => props.theme.colors.backgroundMedium};\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.accent};\n`;\n\nconst StatLabel = styled.span`\n  color: ${props => props.theme.colors.textSecondary};\n`;\n\nconst StatValue = styled.span`\n  color: ${props => props.theme.colors.primary};\n  font-weight: bold;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n  margin-top: 2rem;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst ActionButton = styled.button`\n  background: linear-gradient(45deg, ${props => props.theme.colors.primary}, ${props => props.theme.colors.secondary});\n  color: white;\n  border: none;\n  padding: 1rem 2rem;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(116, 0, 184, 0.3);\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 3rem;\n  margin-bottom: 1rem;\n  \n  @media (max-width: 768px) {\n    font-size: 2rem;\n  }\n`;\n\nconst Subtitle = styled.p`\n  color: ${props => props.theme.colors.textSecondary};\n  margin-bottom: 2rem;\n  font-size: 1.2rem;\n`;\n\nconst LoadingSpinner = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 2rem 0;\n  \n  .spinner {\n    width: 40px;\n    height: 40px;\n    border: 3px solid ${props => props.theme.colors.backgroundMedium};\n    border-top: 3px solid ${props => props.theme.colors.primary};\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n  }\n  \n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nconst XPGainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem 0;\n  padding: 1rem;\n  background: linear-gradient(135deg, rgba(0, 255, 255, 0.1), rgba(0, 255, 0, 0.1));\n  border: 2px solid ${props => props.theme.colors.accent};\n  border-radius: 12px;\n  animation: neonPulse 2s ease-in-out infinite;\n`;\n\nconst XPText = styled.div`\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: ${props => props.theme.colors.accent};\n  font-family: ${props => props.theme.fonts.display};\n  text-shadow: 0 0 10px ${props => props.theme.colors.accent};\n`;\n\nconst StreakText = styled.div`\n  font-size: 1rem;\n  color: ${props => props.theme.colors.warning};\n  font-family: ${props => props.theme.fonts.cyber};\n  margin-top: 0.5rem;\n`;\n\nconst ComboText = styled.div`\n  font-size: 1rem;\n  color: ${props => props.theme.colors.secondary};\n  font-family: ${props => props.theme.fonts.cyber};\n  margin-top: 0.25rem;\n`;\n\nconst LevelUpOverlay = styled(motion.div)`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1000;\n  background: linear-gradient(135deg, rgba(0, 255, 255, 0.9), rgba(0, 255, 0, 0.9));\n  padding: 3rem;\n  border-radius: 20px;\n  text-align: center;\n  border: 3px solid ${props => props.theme.colors.primary};\n  box-shadow: 0 0 50px ${props => props.theme.colors.primary};\n`;\n\nconst LevelUpText = styled.div`\n  font-size: 2.5rem;\n  font-weight: bold;\n  color: #000;\n  font-family: ${props => props.theme.fonts.display};\n  margin-bottom: 1rem;\n  animation: pulse 1s ease-in-out infinite;\n`;\n\nconst LevelUpSubtext = styled.div`\n  font-size: 1.2rem;\n  color: #000;\n  font-family: ${props => props.theme.fonts.cyber};\n`;\n\nexport default GamePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}