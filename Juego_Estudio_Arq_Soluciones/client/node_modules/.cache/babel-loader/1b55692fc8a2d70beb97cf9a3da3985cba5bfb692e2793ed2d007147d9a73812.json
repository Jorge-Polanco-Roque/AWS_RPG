{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import axios from'axios';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[token,setToken]=useState(localStorage.getItem('neuro_token'));// Development mode bypass for testing\nconst isLocalhost=window.location.hostname==='localhost'||window.location.hostname==='127.0.0.1';const testModeEnabled=localStorage.getItem('test_mode_enabled')==='true';useEffect(()=>{// Debug logs\nconsole.log('AuthProvider Debug:',{token,isLocalhost,testModeEnabled,nodeEnv:typeof process!=='undefined'?process.env.NODE_ENV:'unknown'});// Auto-enable test mode on localhost for easy access (unless there's a real token)\nif(isLocalhost&&!token&&!testModeEnabled){console.log('Auto-enabling test mode for localhost access');localStorage.setItem('test_mode_enabled','true');const testUser={id:'test-user-id',username:'TestUser',email:'test@example.com',level:1,experience:0};setUser(testUser);setLoading(false);return;}// Enable test mode for automated testing (works in any environment on localhost)\nif(isLocalhost&&testModeEnabled&&!token){console.log('Test mode enabled, setting test user');const testUser={id:'test-user-id',username:'TestUser',email:'test@example.com',level:1,experience:0};setUser(testUser);setLoading(false);return;}if(token){axios.defaults.headers.common['Authorization']=`Bearer ${token}`;// Validate token by fetching user stats\nfetchUserStats();}else{setLoading(false);}},[token,isLocalhost,testModeEnabled]);const fetchUserStats=async()=>{try{const response=await axios.get('/api/game/stats');if(response.data.success){// If we have a valid token response, create a user object\nsetUser(response.data.stats||{username:'User'});}}catch(error){var _error$response;console.error('Error fetching user stats:',error);if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){logout();}}finally{setLoading(false);}};const login=async credentials=>{try{setLoading(true);const response=await axios.post('/api/auth/login',credentials);if(response.data&&response.data.success){const{token,user}=response.data;setToken(token);setUser(user);localStorage.setItem('neuro_token',token);axios.defaults.headers.common['Authorization']=`Bearer ${token}`;toast.success(`Neural link established, ${user.username}! Welcome back to the matrix...`,{icon:'ðŸ¤–',duration:4000});return{success:true};}else{var _response$data;const message=((_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.error)||'Neural interface authentication failed';toast.error(`Neural interface error: ${message}`,{icon:'ðŸ”´',duration:4000});return{success:false,error:message};}}catch(error){var _error$response2,_error$response2$data;console.error('Login error:',error);const message=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||error.message||'Neural interface connection failed';toast.error(`Neural interface error: ${message}`,{icon:'ðŸ”´',duration:4000});return{success:false,error:message};}finally{setLoading(false);}};const register=async userData=>{try{setLoading(true);const response=await axios.post('/api/auth/register',userData);if(response.data&&response.data.success){const{token,user}=response.data;setToken(token);setUser(user);localStorage.setItem('neuro_token',token);axios.defaults.headers.common['Authorization']=`Bearer ${token}`;toast.success(`Neural profile created, ${user.username}! Entering the cyber realm...`,{icon:'âš¡',duration:4000});return{success:true};}else{var _response$data2;const message=((_response$data2=response.data)===null||_response$data2===void 0?void 0:_response$data2.error)||'Neural profile creation failed';toast.error(`Neural registration failed: ${message}`,{icon:'ðŸ”´',duration:4000});return{success:false,error:message};}}catch(error){var _error$response3,_error$response3$data;console.error('Registration error:',error);const message=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||error.message||'Neural registration connection failed';toast.error(`Neural registration failed: ${message}`,{icon:'ðŸ”´',duration:4000});return{success:false,error:message};}finally{setLoading(false);}};const logout=()=>{setUser(null);setToken(null);localStorage.removeItem('neuro_token');delete axios.defaults.headers.common['Authorization'];// If on localhost, automatically re-enable test mode after logout\nif(isLocalhost){setTimeout(()=>{localStorage.setItem('test_mode_enabled','true');const testUser={id:'test-user-id',username:'TestUser',email:'test@example.com',level:1,experience:0};setUser(testUser);},100);}toast.success('Neural link terminated. Disconnecting from the matrix...',{icon:'ðŸ”Œ',duration:3000});};const updateUserStats=newStats=>{setUser(prev=>prev?{...prev,...newStats}:null);};const enableTestMode=()=>{if(isLocalhost){localStorage.setItem('test_mode_enabled','true');const testUser={id:'test-user-id',username:'TestUser',email:'test@example.com',level:1,experience:0};setUser(testUser);}};const disableTestMode=()=>{localStorage.removeItem('test_mode_enabled');setUser(null);};const value={user,login,register,logout,updateUserStats,enableTestMode,disableTestMode,loading,isAuthenticated:!!user};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","toast","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","isLocalhost","window","location","hostname","testModeEnabled","console","log","nodeEnv","process","env","NODE_ENV","setItem","testUser","id","username","email","level","experience","defaults","headers","common","fetchUserStats","response","get","data","success","stats","error","_error$response","status","logout","login","credentials","post","icon","duration","_response$data","message","_error$response2","_error$response2$data","register","userData","_response$data2","_error$response3","_error$response3$data","removeItem","setTimeout","updateUserStats","newStats","prev","enableTestMode","disableTestMode","value","isAuthenticated","Provider"],"sources":["/Users/A1064331/Desktop/AWS/Claude/Juego_Estudio_Arq_Soluciones/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('neuro_token'));\n  \n  // Development mode bypass for testing\n  const isLocalhost = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\n  const testModeEnabled = localStorage.getItem('test_mode_enabled') === 'true';\n\n  useEffect(() => {\n    // Debug logs\n    console.log('AuthProvider Debug:', {\n      token,\n      isLocalhost,\n      testModeEnabled,\n      nodeEnv: typeof process !== 'undefined' ? process.env.NODE_ENV : 'unknown'\n    });\n    \n    // Auto-enable test mode on localhost for easy access (unless there's a real token)\n    if (isLocalhost && !token && !testModeEnabled) {\n      console.log('Auto-enabling test mode for localhost access');\n      localStorage.setItem('test_mode_enabled', 'true');\n      const testUser = {\n        id: 'test-user-id',\n        username: 'TestUser',\n        email: 'test@example.com',\n        level: 1,\n        experience: 0\n      };\n      setUser(testUser);\n      setLoading(false);\n      return;\n    }\n    \n    // Enable test mode for automated testing (works in any environment on localhost)\n    if (isLocalhost && testModeEnabled && !token) {\n      console.log('Test mode enabled, setting test user');\n      const testUser = {\n        id: 'test-user-id',\n        username: 'TestUser',\n        email: 'test@example.com',\n        level: 1,\n        experience: 0\n      };\n      setUser(testUser);\n      setLoading(false);\n      return;\n    }\n    \n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      // Validate token by fetching user stats\n      fetchUserStats();\n    } else {\n      setLoading(false);\n    }\n  }, [token, isLocalhost, testModeEnabled]);\n\n  const fetchUserStats = async () => {\n    try {\n      const response = await axios.get('/api/game/stats');\n      if (response.data.success) {\n        // If we have a valid token response, create a user object\n        setUser(response.data.stats || { username: 'User' });\n      }\n    } catch (error) {\n      console.error('Error fetching user stats:', error);\n      if (error.response?.status === 401) {\n        logout();\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (credentials) => {\n    try {\n      setLoading(true);\n      const response = await axios.post('/api/auth/login', credentials);\n      \n      if (response.data && response.data.success) {\n        const { token, user } = response.data;\n        setToken(token);\n        setUser(user);\n        localStorage.setItem('neuro_token', token);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        \n        toast.success(`Neural link established, ${user.username}! Welcome back to the matrix...`, {\n          icon: 'ðŸ¤–',\n          duration: 4000,\n        });\n        \n        return { success: true };\n      } else {\n        const message = response.data?.error || 'Neural interface authentication failed';\n        toast.error(`Neural interface error: ${message}`, {\n          icon: 'ðŸ”´',\n          duration: 4000,\n        });\n        return { success: false, error: message };\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      const message = error.response?.data?.error || error.message || 'Neural interface connection failed';\n      toast.error(`Neural interface error: ${message}`, {\n        icon: 'ðŸ”´',\n        duration: 4000,\n      });\n      return { success: false, error: message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      setLoading(true);\n      const response = await axios.post('/api/auth/register', userData);\n      \n      if (response.data && response.data.success) {\n        const { token, user } = response.data;\n        setToken(token);\n        setUser(user);\n        localStorage.setItem('neuro_token', token);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        \n        toast.success(`Neural profile created, ${user.username}! Entering the cyber realm...`, {\n          icon: 'âš¡',\n          duration: 4000,\n        });\n        \n        return { success: true };\n      } else {\n        const message = response.data?.error || 'Neural profile creation failed';\n        toast.error(`Neural registration failed: ${message}`, {\n          icon: 'ðŸ”´',\n          duration: 4000,\n        });\n        return { success: false, error: message };\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      const message = error.response?.data?.error || error.message || 'Neural registration connection failed';\n      toast.error(`Neural registration failed: ${message}`, {\n        icon: 'ðŸ”´',\n        duration: 4000,\n      });\n      return { success: false, error: message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('neuro_token');\n    delete axios.defaults.headers.common['Authorization'];\n    \n    // If on localhost, automatically re-enable test mode after logout\n    if (isLocalhost) {\n      setTimeout(() => {\n        localStorage.setItem('test_mode_enabled', 'true');\n        const testUser = {\n          id: 'test-user-id',\n          username: 'TestUser',\n          email: 'test@example.com',\n          level: 1,\n          experience: 0\n        };\n        setUser(testUser);\n      }, 100);\n    }\n    \n    toast.success('Neural link terminated. Disconnecting from the matrix...', {\n      icon: 'ðŸ”Œ',\n      duration: 3000,\n    });\n  };\n\n  const updateUserStats = (newStats) => {\n    setUser(prev => prev ? { ...prev, ...newStats } : null);\n  };\n\n  const enableTestMode = () => {\n    if (isLocalhost) {\n      localStorage.setItem('test_mode_enabled', 'true');\n      const testUser = {\n        id: 'test-user-id',\n        username: 'TestUser',\n        email: 'test@example.com',\n        level: 1,\n        experience: 0\n      };\n      setUser(testUser);\n    }\n  };\n\n  const disableTestMode = () => {\n    localStorage.removeItem('test_mode_enabled');\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    updateUserStats,\n    enableTestMode,\n    disableTestMode,\n    loading,\n    isAuthenticated: !!user,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}