{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate,useLocation}from'react-router-dom';import styled from'styled-components';import{motion}from'framer-motion';import{useGame}from'../contexts/GameContext';import{useAuth}from'../contexts/AuthContext';import{useSound}from'../contexts/SoundContext';import EntityPortrait from'../components/EntityPortrait';import toast from'react-hot-toast';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GamePage=()=>{const navigate=useNavigate();const location=useLocation();const{playSound}=useSound();const{user}=useAuth();const{currentSession,currentQuestion,gameState,questionHistory,timeRemaining,loading,startGameSession,fetchNextQuestion,submitAnswer,endGameSession,resetGame,getGameStats,setTimeRemaining}=useGame();const[selectedAnswer,setSelectedAnswer]=useState(null);const[showExplanation,setShowExplanation]=useState(false);const[lastResult,setLastResult]=useState(null);const[hasError,setHasError]=useState(false);const searchParams=new URLSearchParams(location.search);const componentFilter=searchParams.get('component');useEffect(()=>{if(gameState==='idle'&&user&&!currentSession){handleStartGame();}},[gameState,user,currentSession]);useEffect(()=>{let interval;if(gameState==='playing'&&timeRemaining>0){interval=setInterval(()=>{setTimeRemaining(prev=>prev-1);},1000);}else if(timeRemaining===0){handleSubmitAnswer(null);}return()=>clearInterval(interval);},[gameState,timeRemaining]);const handleStartGame=async()=>{playSound('button');setHasError(false);const result=await startGameSession(componentFilter||'all');if(!result.success){setHasError(true);}};const handleSubmitAnswer=async answer=>{if(loading||selectedAnswer!==null)return;playSound('button');setSelectedAnswer(answer);setHasError(false);const result=await submitAnswer(answer);if(result.success){setLastResult(result.result);setShowExplanation(true);setTimeout(()=>{setShowExplanation(false);setSelectedAnswer(null);setLastResult(null);if((currentSession===null||currentSession===void 0?void 0:currentSession.questionsAnswered)<65){fetchNextQuestion(currentSession.id,componentFilter?{category:componentFilter}:{});}else{endGameSession();}},5000);}else{setHasError(true);setSelectedAnswer(null);}};const handleSaveGame=()=>{if(currentSession&&currentQuestion){const saveData={session:currentSession,question:currentQuestion,questionHistory,timeRemaining,component:componentFilter,timestamp:new Date().toISOString()};localStorage.setItem('cosmicGameSave',JSON.stringify(saveData));toast.success('Game saved to the cosmic void!',{icon:'💾',duration:3000});playSound('button');}};const handleReturnToMenu=()=>{playSound('button');if(currentSession&&gameState==='playing'){const confirmLeave=window.confirm('Are you sure you want to abandon your cosmic journey? Progress will be lost unless saved.');if(!confirmLeave)return;}resetGame();navigate('/');};const handleRetryAfterError=()=>{setHasError(false);setSelectedAnswer(null);};const formatTime=seconds=>{const mins=Math.floor(seconds/60);const secs=seconds%60;return`${mins}:${secs.toString().padStart(2,'0')}`;};if(gameState==='idle'||loading){return/*#__PURE__*/_jsx(GameContainer,{children:/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,y:50},animate:{opacity:1,y:0},transition:{duration:0.8},children:/*#__PURE__*/_jsxs(GameCard,{className:\"modern-card\",children:[/*#__PURE__*/_jsx(Title,{className:\"modern-title\",children:\"Practice Session Loading\"}),/*#__PURE__*/_jsx(Subtitle,{children:\"Preparing your AWS questions...\"}),/*#__PURE__*/_jsx(LoadingSpinner,{children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"})})]})})});}if(gameState==='ended'){const stats=getGameStats();return/*#__PURE__*/_jsx(GameContainer,{children:/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,y:50},animate:{opacity:1,y:0},transition:{duration:0.8},children:/*#__PURE__*/_jsxs(GameCard,{className:\"modern-card\",children:[/*#__PURE__*/_jsx(Title,{className:\"modern-title\",children:\"Session Complete\"}),/*#__PURE__*/_jsx(Subtitle,{children:\"Great work! Here are your results:\"}),/*#__PURE__*/_jsxs(StatsContainer,{children:[/*#__PURE__*/_jsxs(StatItem,{children:[/*#__PURE__*/_jsx(StatLabel,{children:\"Questions Answered:\"}),/*#__PURE__*/_jsx(StatValue,{children:stats.questionsAnswered})]}),/*#__PURE__*/_jsxs(StatItem,{children:[/*#__PURE__*/_jsx(StatLabel,{children:\"Correct Answers:\"}),/*#__PURE__*/_jsx(StatValue,{children:stats.correctAnswers})]}),/*#__PURE__*/_jsxs(StatItem,{children:[/*#__PURE__*/_jsx(StatLabel,{children:\"Accuracy:\"}),/*#__PURE__*/_jsxs(StatValue,{children:[stats.accuracy,\"%\"]})]})]}),/*#__PURE__*/_jsxs(ButtonContainer,{children:[/*#__PURE__*/_jsx(ActionButton,{onClick:handleReturnToMenu,children:\"Return to Main Menu\"}),/*#__PURE__*/_jsx(ActionButton,{onClick:handleStartGame,children:\"Start New Session\"})]})]})})});}return/*#__PURE__*/_jsxs(GameContainer,{children:[/*#__PURE__*/_jsxs(GameHeader,{children:[/*#__PURE__*/_jsxs(GameControls,{children:[/*#__PURE__*/_jsx(SaveButton,{onClick:handleSaveGame,children:\"\\uD83D\\uDCBE Save Game\"}),/*#__PURE__*/_jsx(MenuButton,{onClick:handleReturnToMenu,children:\"\\uD83C\\uDFE0 Return to Menu\"})]}),/*#__PURE__*/_jsxs(GameInfo,{children:[/*#__PURE__*/_jsxs(InfoItem,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"Question:\"}),/*#__PURE__*/_jsxs(InfoValue,{children:[(currentSession===null||currentSession===void 0?void 0:currentSession.questionsAnswered)+1,\"/65\"]})]}),/*#__PURE__*/_jsxs(InfoItem,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"Time:\"}),/*#__PURE__*/_jsx(InfoValue,{children:formatTime(timeRemaining)})]}),/*#__PURE__*/_jsxs(InfoItem,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"Accuracy:\"}),/*#__PURE__*/_jsxs(InfoValue,{children:[(currentSession===null||currentSession===void 0?void 0:currentSession.questionsAnswered)>0?(currentSession.correctAnswers/currentSession.questionsAnswered*100).toFixed(1):0,\"%\"]})]})]})]}),currentQuestion&&/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,y:50},animate:{opacity:1,y:0},transition:{duration:0.6},children:/*#__PURE__*/_jsxs(QuestionCard,{className:\"modern-card\",children:[currentQuestion.cosmicContext&&/*#__PURE__*/_jsxs(EntitySection,{children:[/*#__PURE__*/_jsx(EntityPortrait,{entity:{name:currentQuestion.cosmicContext.entityName,emoji:currentQuestion.cosmicContext.entityEmoji||\"👁️\",description:currentQuestion.cosmicContext.description},size:\"medium\"}),/*#__PURE__*/_jsx(EntityFlavor,{children:currentQuestion.cosmicContext.flavorText})]}),/*#__PURE__*/_jsx(QuestionText,{children:currentQuestion.question}),/*#__PURE__*/_jsx(OptionsContainer,{children:currentQuestion.options.map((option,index)=>/*#__PURE__*/_jsxs(OptionButton,{onClick:()=>!hasError&&handleSubmitAnswer(index),disabled:loading||selectedAnswer!==null,selected:selectedAnswer===index,className:selectedAnswer===index?'selected':'',children:[String.fromCharCode(65+index),\". \",option]},index))}),hasError&&/*#__PURE__*/_jsxs(ErrorContainer,{children:[/*#__PURE__*/_jsx(ErrorMessage,{children:\"The cosmic forces disrupted your answer. Try selecting a different option.\"}),/*#__PURE__*/_jsx(RetryButton,{onClick:handleRetryAfterError,children:\"Choose Another Path\"})]})]})}),showExplanation&&lastResult&&/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,y:50},animate:{opacity:1,y:0},transition:{duration:0.6},children:/*#__PURE__*/_jsxs(ExplanationCard,{className:\"modern-card\",children:[/*#__PURE__*/_jsx(ExplanationHeader,{correct:lastResult.correct,children:lastResult.correct?'✨ Correct!':'💀 Incorrect'}),/*#__PURE__*/_jsx(ExplanationText,{children:lastResult.explanation}),lastResult.cosmicResponse&&/*#__PURE__*/_jsx(CosmicResponse,{children:lastResult.cosmicResponse})]})})]});};const GameContainer=styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  max-width: 1200px;\n  margin: 0 auto;\n`;const GameHeader=styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n  padding: 1rem;\n  background: ${props=>props.theme.colors.surface};\n  border-radius: 16px;\n  border: 1px solid ${props=>props.theme.colors.border};\n  box-shadow: ${props=>props.theme.shadows.sm};\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 1rem;\n  }\n`;const GameControls=styled.div`\n  display: flex;\n  gap: 1rem;\n`;const SaveButton=styled.button`\n  background: linear-gradient(135deg, ${props=>props.theme.colors.info}, ${props=>props.theme.colors.primary});\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 12px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: ${props=>props.theme.shadows.sm};\n  \n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: ${props=>props.theme.shadows.md};\n  }\n`;const MenuButton=styled.button`\n  background: linear-gradient(135deg, ${props=>props.theme.colors.error}, #DC2626);\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 12px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: ${props=>props.theme.shadows.sm};\n  \n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: ${props=>props.theme.shadows.md};\n  }\n`;const GameInfo=styled.div`\n  display: flex;\n  gap: 2rem;\n  \n  @media (max-width: 768px) {\n    gap: 1rem;\n  }\n`;const InfoItem=styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;const InfoLabel=styled.span`\n  font-size: 0.8rem;\n  color: ${props=>props.theme.colors.textSecondary};\n`;const InfoValue=styled.span`\n  font-size: 1.2rem;\n  font-weight: bold;\n  color: ${props=>props.theme.colors.primary};\n`;const GameCard=styled.div`\n  max-width: 800px;\n  width: 100%;\n  text-align: center;\n  margin: 0 auto;\n`;const QuestionCard=styled.div`\n  margin-bottom: 2rem;\n  text-align: left;\n`;const EntitySection=styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  margin-bottom: 2rem;\n  padding: 1rem;\n  background: ${props=>props.theme.colors.backgroundDark};\n  border-radius: 8px;\n  border: 1px solid ${props=>props.theme.colors.secondary};\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    text-align: center;\n  }\n`;const EntityFlavor=styled.p`\n  color: ${props=>props.theme.colors.accent};\n  font-style: italic;\n  font-size: 0.9rem;\n  margin: 0;\n`;const QuestionText=styled.p`\n  font-size: 1.1rem;\n  line-height: 1.6;\n  margin-bottom: 2rem;\n  color: ${props=>props.theme.colors.text};\n`;const OptionsContainer=styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;const OptionButton=styled.button`\n  background: ${props=>props.selected?`linear-gradient(45deg, ${props.theme.colors.primary}, ${props.theme.colors.secondary})`:`linear-gradient(135deg, ${props.theme.colors.backgroundMedium}, ${props.theme.colors.surface})`};\n  color: ${props=>props.theme.colors.text};\n  border: 2px solid ${props=>props.selected?props.theme.colors.primary:props.theme.colors.accent};\n  padding: 1rem;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  text-align: left;\n  font-size: 1rem;\n  \n  &:hover:not(:disabled) {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(116, 0, 184, 0.3);\n    border-color: ${props=>props.theme.colors.primary};\n  }\n  \n  &:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n`;const ErrorContainer=styled.div`\n  margin-top: 2rem;\n  padding: 1rem;\n  background: linear-gradient(135deg, #FF6B6B, #FF8E8E);\n  border-radius: 8px;\n  text-align: center;\n`;const ErrorMessage=styled.p`\n  color: white;\n  margin-bottom: 1rem;\n  font-size: 1rem;\n`;const RetryButton=styled.button`\n  background: white;\n  color: #FF6B6B;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 8px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(255, 255, 255, 0.3);\n  }\n`;const ExplanationCard=styled.div`\n  margin-top: 2rem;\n  text-align: left;\n`;const ExplanationHeader=styled.h3`\n  color: ${props=>props.correct?'#00ff88':'#ff0066'};\n  margin-bottom: 1rem;\n  font-size: 1.5rem;\n`;const ExplanationText=styled.p`\n  color: ${props=>props.theme.colors.text};\n  line-height: 1.6;\n  margin-bottom: 1rem;\n`;const CosmicResponse=styled.p`\n  color: ${props=>props.theme.colors.accent};\n  font-style: italic;\n  font-size: 0.9rem;\n  margin: 0;\n`;const StatsContainer=styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  margin: 2rem 0;\n`;const StatItem=styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 1rem;\n  background: ${props=>props.theme.colors.backgroundMedium};\n  border-radius: 8px;\n  border: 1px solid ${props=>props.theme.colors.accent};\n`;const StatLabel=styled.span`\n  color: ${props=>props.theme.colors.textSecondary};\n`;const StatValue=styled.span`\n  color: ${props=>props.theme.colors.primary};\n  font-weight: bold;\n`;const ButtonContainer=styled.div`\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n  margin-top: 2rem;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;const ActionButton=styled.button`\n  background: linear-gradient(45deg, ${props=>props.theme.colors.primary}, ${props=>props.theme.colors.secondary});\n  color: white;\n  border: none;\n  padding: 1rem 2rem;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(116, 0, 184, 0.3);\n  }\n`;const Title=styled.h1`\n  font-size: 3rem;\n  margin-bottom: 1rem;\n  \n  @media (max-width: 768px) {\n    font-size: 2rem;\n  }\n`;const Subtitle=styled.p`\n  color: ${props=>props.theme.colors.textSecondary};\n  margin-bottom: 2rem;\n  font-size: 1.2rem;\n`;const LoadingSpinner=styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 2rem 0;\n  \n  .spinner {\n    width: 40px;\n    height: 40px;\n    border: 3px solid ${props=>props.theme.colors.backgroundMedium};\n    border-top: 3px solid ${props=>props.theme.colors.primary};\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n  }\n  \n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;export default GamePage;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","styled","motion","useGame","useAuth","useSound","EntityPortrait","toast","jsx","_jsx","jsxs","_jsxs","GamePage","navigate","location","playSound","user","currentSession","currentQuestion","gameState","questionHistory","timeRemaining","loading","startGameSession","fetchNextQuestion","submitAnswer","endGameSession","resetGame","getGameStats","setTimeRemaining","selectedAnswer","setSelectedAnswer","showExplanation","setShowExplanation","lastResult","setLastResult","hasError","setHasError","searchParams","URLSearchParams","search","componentFilter","get","handleStartGame","interval","setInterval","prev","handleSubmitAnswer","clearInterval","result","success","answer","setTimeout","questionsAnswered","id","category","handleSaveGame","saveData","session","question","component","timestamp","Date","toISOString","localStorage","setItem","JSON","stringify","icon","duration","handleReturnToMenu","confirmLeave","window","confirm","handleRetryAfterError","formatTime","seconds","mins","Math","floor","secs","toString","padStart","GameContainer","children","div","initial","opacity","y","animate","transition","GameCard","className","Title","Subtitle","LoadingSpinner","stats","StatsContainer","StatItem","StatLabel","StatValue","correctAnswers","accuracy","ButtonContainer","ActionButton","onClick","GameHeader","GameControls","SaveButton","MenuButton","GameInfo","InfoItem","InfoLabel","InfoValue","toFixed","QuestionCard","cosmicContext","EntitySection","entity","name","entityName","emoji","entityEmoji","description","size","EntityFlavor","flavorText","QuestionText","OptionsContainer","options","map","option","index","OptionButton","disabled","selected","String","fromCharCode","ErrorContainer","ErrorMessage","RetryButton","ExplanationCard","ExplanationHeader","correct","ExplanationText","explanation","cosmicResponse","CosmicResponse","props","theme","colors","surface","border","shadows","sm","button","info","primary","md","error","span","textSecondary","backgroundDark","secondary","p","accent","text","backgroundMedium","h3","h1"],"sources":["/Users/A1064331/Desktop/AWS/Claude/Juego_Estudio_Arq_Soluciones/client/src/pages/GamePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { useGame } from '../contexts/GameContext';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useSound } from '../contexts/SoundContext';\nimport EntityPortrait from '../components/EntityPortrait';\nimport toast from 'react-hot-toast';\n\nconst GamePage = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { playSound } = useSound();\n  const { user } = useAuth();\n  const {\n    currentSession,\n    currentQuestion,\n    gameState,\n    questionHistory,\n    timeRemaining,\n    loading,\n    startGameSession,\n    fetchNextQuestion,\n    submitAnswer,\n    endGameSession,\n    resetGame,\n    getGameStats,\n    setTimeRemaining,\n  } = useGame();\n\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [showExplanation, setShowExplanation] = useState(false);\n  const [lastResult, setLastResult] = useState(null);\n  const [hasError, setHasError] = useState(false);\n\n  const searchParams = new URLSearchParams(location.search);\n  const componentFilter = searchParams.get('component');\n\n  useEffect(() => {\n    if (gameState === 'idle' && user && !currentSession) {\n      handleStartGame();\n    }\n  }, [gameState, user, currentSession]);\n\n  useEffect(() => {\n    let interval;\n    if (gameState === 'playing' && timeRemaining > 0) {\n      interval = setInterval(() => {\n        setTimeRemaining(prev => prev - 1);\n      }, 1000);\n    } else if (timeRemaining === 0) {\n      handleSubmitAnswer(null);\n    }\n    return () => clearInterval(interval);\n  }, [gameState, timeRemaining]);\n\n  const handleStartGame = async () => {\n    playSound('button');\n    setHasError(false);\n    const result = await startGameSession(componentFilter || 'all');\n    if (!result.success) {\n      setHasError(true);\n    }\n  };\n\n  const handleSubmitAnswer = async (answer) => {\n    if (loading || selectedAnswer !== null) return;\n    \n    playSound('button');\n    setSelectedAnswer(answer);\n    setHasError(false);\n    \n    const result = await submitAnswer(answer);\n    if (result.success) {\n      setLastResult(result.result);\n      setShowExplanation(true);\n      \n      setTimeout(() => {\n        setShowExplanation(false);\n        setSelectedAnswer(null);\n        setLastResult(null);\n        \n        if (currentSession?.questionsAnswered < 65) {\n          fetchNextQuestion(currentSession.id, componentFilter ? { category: componentFilter } : {});\n        } else {\n          endGameSession();\n        }\n      }, 5000);\n    } else {\n      setHasError(true);\n      setSelectedAnswer(null);\n    }\n  };\n\n  const handleSaveGame = () => {\n    if (currentSession && currentQuestion) {\n      const saveData = {\n        session: currentSession,\n        question: currentQuestion,\n        questionHistory,\n        timeRemaining,\n        component: componentFilter,\n        timestamp: new Date().toISOString(),\n      };\n      \n      localStorage.setItem('cosmicGameSave', JSON.stringify(saveData));\n      \n      toast.success('Game saved to the cosmic void!', {\n        icon: '💾',\n        duration: 3000,\n      });\n      \n      playSound('button');\n    }\n  };\n\n  const handleReturnToMenu = () => {\n    playSound('button');\n    if (currentSession && gameState === 'playing') {\n      const confirmLeave = window.confirm('Are you sure you want to abandon your cosmic journey? Progress will be lost unless saved.');\n      if (!confirmLeave) return;\n    }\n    \n    resetGame();\n    navigate('/');\n  };\n\n  const handleRetryAfterError = () => {\n    setHasError(false);\n    setSelectedAnswer(null);\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  if (gameState === 'idle' || loading) {\n    return (\n      <GameContainer>\n        <motion.div\n          initial={{ opacity: 0, y: 50 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n        >\n          <GameCard className=\"modern-card\">\n            <Title className=\"modern-title\">Practice Session Loading</Title>\n            <Subtitle>Preparing your AWS questions...</Subtitle>\n            <LoadingSpinner>\n              <div className=\"spinner\"></div>\n            </LoadingSpinner>\n          </GameCard>\n        </motion.div>\n      </GameContainer>\n    );\n  }\n\n  if (gameState === 'ended') {\n    const stats = getGameStats();\n    return (\n      <GameContainer>\n        <motion.div\n          initial={{ opacity: 0, y: 50 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n        >\n          <GameCard className=\"modern-card\">\n            <Title className=\"modern-title\">Session Complete</Title>\n            <Subtitle>Great work! Here are your results:</Subtitle>\n            \n            <StatsContainer>\n              <StatItem>\n                <StatLabel>Questions Answered:</StatLabel>\n                <StatValue>{stats.questionsAnswered}</StatValue>\n              </StatItem>\n              <StatItem>\n                <StatLabel>Correct Answers:</StatLabel>\n                <StatValue>{stats.correctAnswers}</StatValue>\n              </StatItem>\n              <StatItem>\n                <StatLabel>Accuracy:</StatLabel>\n                <StatValue>{stats.accuracy}%</StatValue>\n              </StatItem>\n            </StatsContainer>\n            \n            <ButtonContainer>\n              <ActionButton onClick={handleReturnToMenu}>\n                Return to Main Menu\n              </ActionButton>\n              <ActionButton onClick={handleStartGame}>\n                Start New Session\n              </ActionButton>\n            </ButtonContainer>\n          </GameCard>\n        </motion.div>\n      </GameContainer>\n    );\n  }\n\n  return (\n    <GameContainer>\n      <GameHeader>\n        <GameControls>\n          <SaveButton onClick={handleSaveGame}>\n            💾 Save Game\n          </SaveButton>\n          <MenuButton onClick={handleReturnToMenu}>\n            🏠 Return to Menu\n          </MenuButton>\n        </GameControls>\n        \n        <GameInfo>\n          <InfoItem>\n            <InfoLabel>Question:</InfoLabel>\n            <InfoValue>{currentSession?.questionsAnswered + 1}/65</InfoValue>\n          </InfoItem>\n          <InfoItem>\n            <InfoLabel>Time:</InfoLabel>\n            <InfoValue>{formatTime(timeRemaining)}</InfoValue>\n          </InfoItem>\n          <InfoItem>\n            <InfoLabel>Accuracy:</InfoLabel>\n            <InfoValue>\n              {currentSession?.questionsAnswered > 0 \n                ? ((currentSession.correctAnswers / currentSession.questionsAnswered) * 100).toFixed(1)\n                : 0}%\n            </InfoValue>\n          </InfoItem>\n        </GameInfo>\n      </GameHeader>\n\n      {currentQuestion && (\n        <motion.div\n          initial={{ opacity: 0, y: 50 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <QuestionCard className=\"modern-card\">\n            {currentQuestion.cosmicContext && (\n              <EntitySection>\n                <EntityPortrait \n                  entity={{\n                    name: currentQuestion.cosmicContext.entityName,\n                    emoji: currentQuestion.cosmicContext.entityEmoji || \"👁️\",\n                    description: currentQuestion.cosmicContext.description\n                  }}\n                  size=\"medium\"\n                />\n                <EntityFlavor>\n                  {currentQuestion.cosmicContext.flavorText}\n                </EntityFlavor>\n              </EntitySection>\n            )}\n            \n            <QuestionText>{currentQuestion.question}</QuestionText>\n            \n            <OptionsContainer>\n              {currentQuestion.options.map((option, index) => (\n                <OptionButton\n                  key={index}\n                  onClick={() => !hasError && handleSubmitAnswer(index)}\n                  disabled={loading || selectedAnswer !== null}\n                  selected={selectedAnswer === index}\n                  className={selectedAnswer === index ? 'selected' : ''}\n                >\n                  {String.fromCharCode(65 + index)}. {option}\n                </OptionButton>\n              ))}\n            </OptionsContainer>\n\n            {hasError && (\n              <ErrorContainer>\n                <ErrorMessage>\n                  The cosmic forces disrupted your answer. Try selecting a different option.\n                </ErrorMessage>\n                <RetryButton onClick={handleRetryAfterError}>\n                  Choose Another Path\n                </RetryButton>\n              </ErrorContainer>\n            )}\n          </QuestionCard>\n        </motion.div>\n      )}\n\n      {showExplanation && lastResult && (\n        <motion.div\n          initial={{ opacity: 0, y: 50 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <ExplanationCard className=\"modern-card\">\n            <ExplanationHeader correct={lastResult.correct}>\n              {lastResult.correct ? '✨ Correct!' : '💀 Incorrect'}\n            </ExplanationHeader>\n            <ExplanationText>\n              {lastResult.explanation}\n            </ExplanationText>\n            {lastResult.cosmicResponse && (\n              <CosmicResponse>\n                {lastResult.cosmicResponse}\n              </CosmicResponse>\n            )}\n          </ExplanationCard>\n        </motion.div>\n      )}\n    </GameContainer>\n  );\n};\n\nconst GameContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst GameHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n  padding: 1rem;\n  background: ${props => props.theme.colors.surface};\n  border-radius: 16px;\n  border: 1px solid ${props => props.theme.colors.border};\n  box-shadow: ${props => props.theme.shadows.sm};\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 1rem;\n  }\n`;\n\nconst GameControls = styled.div`\n  display: flex;\n  gap: 1rem;\n`;\n\nconst SaveButton = styled.button`\n  background: linear-gradient(135deg, ${props => props.theme.colors.info}, ${props => props.theme.colors.primary});\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 12px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: ${props => props.theme.shadows.sm};\n  \n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: ${props => props.theme.shadows.md};\n  }\n`;\n\nconst MenuButton = styled.button`\n  background: linear-gradient(135deg, ${props => props.theme.colors.error}, #DC2626);\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 12px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: ${props => props.theme.shadows.sm};\n  \n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: ${props => props.theme.shadows.md};\n  }\n`;\n\nconst GameInfo = styled.div`\n  display: flex;\n  gap: 2rem;\n  \n  @media (max-width: 768px) {\n    gap: 1rem;\n  }\n`;\n\nconst InfoItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst InfoLabel = styled.span`\n  font-size: 0.8rem;\n  color: ${props => props.theme.colors.textSecondary};\n`;\n\nconst InfoValue = styled.span`\n  font-size: 1.2rem;\n  font-weight: bold;\n  color: ${props => props.theme.colors.primary};\n`;\n\nconst GameCard = styled.div`\n  max-width: 800px;\n  width: 100%;\n  text-align: center;\n  margin: 0 auto;\n`;\n\nconst QuestionCard = styled.div`\n  margin-bottom: 2rem;\n  text-align: left;\n`;\n\nconst EntitySection = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  margin-bottom: 2rem;\n  padding: 1rem;\n  background: ${props => props.theme.colors.backgroundDark};\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.secondary};\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    text-align: center;\n  }\n`;\n\nconst EntityFlavor = styled.p`\n  color: ${props => props.theme.colors.accent};\n  font-style: italic;\n  font-size: 0.9rem;\n  margin: 0;\n`;\n\nconst QuestionText = styled.p`\n  font-size: 1.1rem;\n  line-height: 1.6;\n  margin-bottom: 2rem;\n  color: ${props => props.theme.colors.text};\n`;\n\nconst OptionsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst OptionButton = styled.button`\n  background: ${props => props.selected \n    ? `linear-gradient(45deg, ${props.theme.colors.primary}, ${props.theme.colors.secondary})`\n    : `linear-gradient(135deg, ${props.theme.colors.backgroundMedium}, ${props.theme.colors.surface})`\n  };\n  color: ${props => props.theme.colors.text};\n  border: 2px solid ${props => props.selected \n    ? props.theme.colors.primary \n    : props.theme.colors.accent\n  };\n  padding: 1rem;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  text-align: left;\n  font-size: 1rem;\n  \n  &:hover:not(:disabled) {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(116, 0, 184, 0.3);\n    border-color: ${props => props.theme.colors.primary};\n  }\n  \n  &:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n`;\n\nconst ErrorContainer = styled.div`\n  margin-top: 2rem;\n  padding: 1rem;\n  background: linear-gradient(135deg, #FF6B6B, #FF8E8E);\n  border-radius: 8px;\n  text-align: center;\n`;\n\nconst ErrorMessage = styled.p`\n  color: white;\n  margin-bottom: 1rem;\n  font-size: 1rem;\n`;\n\nconst RetryButton = styled.button`\n  background: white;\n  color: #FF6B6B;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 8px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(255, 255, 255, 0.3);\n  }\n`;\n\nconst ExplanationCard = styled.div`\n  margin-top: 2rem;\n  text-align: left;\n`;\n\nconst ExplanationHeader = styled.h3`\n  color: ${props => props.correct ? '#00ff88' : '#ff0066'};\n  margin-bottom: 1rem;\n  font-size: 1.5rem;\n`;\n\nconst ExplanationText = styled.p`\n  color: ${props => props.theme.colors.text};\n  line-height: 1.6;\n  margin-bottom: 1rem;\n`;\n\nconst CosmicResponse = styled.p`\n  color: ${props => props.theme.colors.accent};\n  font-style: italic;\n  font-size: 0.9rem;\n  margin: 0;\n`;\n\nconst StatsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  margin: 2rem 0;\n`;\n\nconst StatItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 1rem;\n  background: ${props => props.theme.colors.backgroundMedium};\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.accent};\n`;\n\nconst StatLabel = styled.span`\n  color: ${props => props.theme.colors.textSecondary};\n`;\n\nconst StatValue = styled.span`\n  color: ${props => props.theme.colors.primary};\n  font-weight: bold;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n  margin-top: 2rem;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst ActionButton = styled.button`\n  background: linear-gradient(45deg, ${props => props.theme.colors.primary}, ${props => props.theme.colors.secondary});\n  color: white;\n  border: none;\n  padding: 1rem 2rem;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(116, 0, 184, 0.3);\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 3rem;\n  margin-bottom: 1rem;\n  \n  @media (max-width: 768px) {\n    font-size: 2rem;\n  }\n`;\n\nconst Subtitle = styled.p`\n  color: ${props => props.theme.colors.textSecondary};\n  margin-bottom: 2rem;\n  font-size: 1.2rem;\n`;\n\nconst LoadingSpinner = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 2rem 0;\n  \n  .spinner {\n    width: 40px;\n    height: 40px;\n    border: 3px solid ${props => props.theme.colors.backgroundMedium};\n    border-top: 3px solid ${props => props.theme.colors.primary};\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n  }\n  \n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nexport default GamePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}